{"version":3,"sources":["regression-viewer/data.yaml","tfw/webgl/resize.js","regression-viewer/painter/point/shader/point.vert","regression-viewer/painter/point/shader/point.frag","regression-viewer/painter/axis/shader/axis.vert","regression-viewer/painter/axis/shader/axis.frag","tfw/webgl/math.ts","tfw/gesture/moves.ts","tfw/gesture/finger.ts","tfw/gesture/basic-handler.ts","tfw/gesture/gesture.ts","regression-viewer/data.ts","tfw/webgl/program.ts","tfw/util.ts","regression-viewer/painter/point/point.ts","tfw/webgl/texture.ts","regression-viewer/painter/axis/axis.ts","regression-viewer/app.tsx","index.tsx"],"names":["module","exports","gl","_resolution","resolution","window","devicePixelRatio","displayWidth","Math","floor","canvas","clientWidth","displayHeight","clientHeight","width","height","viewport","M4","identity","mat4","matrix","vector","a","b","c","d","Float32Array","projection","depth","translation","tx","ty","tz","rotationX","rad","result","undefined","cos","s","sin","M4_00","rotationY","rotationZ","rotationXY","radX","radY","cx","sx","cy","sy","rotationYX","rotationXZ","radZ","cz","sz","rotationZX","scaling","copy","normalize","arr","n","len","k","length","v","coeff","sqrt","cameraPolar","targetX","targetY","targetZ","dis","lat","lng","cosLat","sinLat","cosLng","PI","sinLng","Zx","Zy","Zz","Xx","Xy","Xz","Yx","Yy","Yz","Tx","Ty","Tz","M4_01","M4_02","M4_03","M4_10","M4_11","M4_12","M4_13","M4_20","M4_21","M4_22","M4_23","M4_30","M4_31","M4_32","M4_33","perspective","fieldAngle","aspect","near","far","f","tan","rangeInv","mul","MUL","Error","v00","v10","v20","v30","v01","v11","v21","v31","v02","v12","v22","v32","v03","v13","v23","v33","m4m4","output","m9m9","m16m16","m16m4","CAPACITY","Moves","x","y","_x0","_y0","_time0","_x","Array","_y","_time","_cursor","this","init","now","fill","shift","idx","Date","idx0","idx1","_index","time","time0","time1","time01","idx2","time12","x0","x1","y0","y1","Finger","fingers","identifier","index","indexOf","indexOfFirstNull","push","movingElements","addEventListener","event","movingElem","cancelBubble","target","handleMove","clientX","clientY","pointer","buttons","translateButtons","clear","createClear","ex","console","error","handleUp","splice","BasicHandler","element","handleDown","mouseType","mouseTypeTime","deviceHandlers","pressed","attachDownEvent","call","delay","touchstart","mousedown","removeEventListener","attachDownEventTouch","attachDownEventMouse","handler","checkMouseType","rect","getBoundingClientRect","changedTouches","touch","getIndex","left","top","evt","preventDefault","stopPropagation","metaKey","ctrlKey","SYMBOL","Symbol","ID","STANDARD_EVENTS","Gesture","elem","handlers","pointers","id","bind","rawHandlers","Object","keys","eventName","wheel","deltaX","deltaY","deltaZ","wrapSpecialHandlers","assign","forEach","names","name","isDown","moves","ptr","getPointer","down","add","up","recognizeTap","recognizeSwipe","recognizePan","tap","elapsedTime","abs","startX","startY","recognizePanDown","recognizePanUp","pan","hasHandlerFor","speedX","speedY","dx","pandown","panvertical","panup","recognizeSwipeDown","recognizeSwipeUp","recognizeSwipeLeft","swipe","dy","swipedown","swipevertical","swipeup","swipeleft","swipehorizontal","DataManager","points","planes","x1Min","x1Max","x2Min","x2Max","yMin","yMax","info","Data","that","point","x2","map","p","min","max","a1","a2","BPE","BYTES_PER_ELEMENT","Program","codes","includes","program","_typesNamesLookup","attribs","uniforms","vert","frag","parseInclude","parseIncludes","freeze","lookup","toUpperCase","getTypesNamesLookup","shaderProgram","createProgram","vertShader","code","getShader","VERTEX_SHADER","getVertexShader","attachShader","fragShader","FRAGMENT_SHADER","getFragmentShader","linkProgram","use","useProgram","createAttributes","createUniforms","attribsCount","getProgramParameter","ACTIVE_ATTRIBUTES","item","getActiveAttrib","typeName","getTypeName","type","getSize","location","getAttribLocation","defineProperty","value","writable","enumerable","configurable","FLOAT_VEC4","FLOAT_VEC3","FLOAT_VEC2","FLOAT","typeId","buffer","bindBuffer","ARRAY_BUFFER","totalSize","attrib","join","size","offset","enableVertexAttribArray","vertexAttribPointer","uniformsCount","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","set","createUniformSetter","get","createUniformGetter","nameGL","nameJS","BYTE","UNSIGNED_BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","SAMPLER_2D","uniform1i","uniform1iv","uniform1f","uniform1fv","uniform2fv","uniform3fv","uniform4fv","FLOAT_MAT3","uniformMatrix3fv","FLOAT_MAT4","uniformMatrix4fv","split","line","trim","substr","pos","includeName","charAt","snippet","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","log","getShaderInfoLog","url","Promise","resolve","reject","fetch","then","response","ok","status","statusText","text","catch","PointPainter","shaders","data","prg","buff","pointsCount","initBuffer","transfo","enable","DEPTH_TEST","depthFunc","LESS","minSize","$uniTransfo","$uniPointSize","$uniColor","bindAttribs","drawArrays","POINTS","createBuffer","bufferData","createPointVertices","STATIC_DRAW","vertices","idxDst","idxSrc","getPoint","create","Util","VertPoint","FragPoint","createCanvas","document","createElement","setAttribute","createFromCanvas","texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","texImage2D","RGBA","AxisPainter","textures","createTextures","camera","cullFace","BACK","disable","CULL_FACE","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","$uniCamera","$uniTexture","activeTexture","TEXTURE0","TRIANGLE_STRIP","canvas1","Texture","ctx1","getContext","fillStyle","fillRect","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","font","fillText","tex1","canvas2","ctx2","tex2","canvas3","ctx3","createAxisVertices","center","getCenter","radius","getRadius","X1","X2","Y","Vert","Frag","App","props","refCanvas","React","createRef","latitude","longitude","distance","saveLat","saveLng","saveDis","pointPainter","axisPainter","handleWheel","dir","clamp","handlePan","paint","requestAnimationFrame","Resize","clearColor","clearDepth","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","current","attachGestures","gesture","on","className","ref","Component","ReactDOM","render","getElementById","start"],"mappings":"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kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,GAAG,iBAAiB,kBAAkB,CAAC,IAAI,kBAAmB,kBAAkB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAkB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAkB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAkB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAkB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAkB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,GAAG,iBAAiB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,GAAG,iBAAiB,kBAAkB,CAAC,IAAI,kBAAmB,kBAAkB,CAAC,GAAG,kBAAmB,kBAAkB,CAAC,EAAE,kBAAmB,kBAAkB,CAAC,IAAI,kBAAmB,kBAAkB,CAAC,EAAE,kBAAmB,kBAAkB,CAAC,GAAG,kBAAmB,kBAAkB,CAAC,EAAE,kBAAmB,kBAAkB,CAAC,IAAI,kBAAmB,kBAAkB,CAAC,EAAE,kBAAmB,kBAAkB,CAAC,IAAI,kBAAmB,kBAAkB,CAAC,IAAI,kBAAmB,kBAAkB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAkB,CAAC,KAAK,kBAAmB,kBAAkB,CAAC,EAAE,kBAAmB,kBAAkB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,GAAG,gBAAgB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAkB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,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kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAkB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,KAAK,gBAAgB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAkB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAkB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAkB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAkB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAkB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,KAAK,gBAAgB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAkB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAkB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,GAAG,gBAAgB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,KAAK,gBAAgB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAkB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,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kBAAmB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAkB,CAAC,KAAK,iBAAiB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAkB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,GAAG,iBAAiB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,GAAG,iBAAiB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,KAAK,iBAAiB,kBAAkB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,GAAG,iBAAiB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAkB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAkB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,GAAG,iBAAiB,kBAAkB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAkB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAkB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAkB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAkB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAkB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAkB,CAAC,GAAG,gBAAgB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAkB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAkB,CAAC,GAAG,kBAAmB,kBAAkB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAkB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAkB,CAAC,GAAG,iBAAiB,kBAAkB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,GAAG,iBAAiB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAkB,CAAC,GAAG,kBAAmB,kBAAkB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,KAAK,iBAAiB,kBAAkB,CAAC,KAAK,kBAAmB,kBAAkB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAkB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAkB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,GAAG,iBAAiB,kBAAkB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,GAAG,iBAAiB,kBAAkB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAkB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,GAAG,iBAAiB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAkB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,GAAG,iBAAiB,kBAAkB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,GAAG,iBAAiB,kBAAkB,CAAC,GAAG,gBAAgB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAkB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAkB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAkB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAkB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAkB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAkB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAkB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAkB,CAAC,EAAE,kBAAmB,kBAAkB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,GAAG,iBAAiB,kBAAkB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAkB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAkB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAkB,CAAC,IAAI,kBAAmB,kBAAkB,CAAC,IAAI,kBAAmB,kBAAkB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,KAAK,iBAAiB,kBAAkB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,KAAK,iBAAiB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAkB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAkB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,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kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,KAAK,iBAAiB,kBAAkB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAkB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAkB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAkB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAkB,CAAC,EAAE,iBAAkB,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kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,GAAG,gBAAgB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAkB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,GAAG,gBAAgB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,GAAG,gBAAgB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAkB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAkB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAkB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,GAAG,iBAAiB,kBAAkB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAkB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAkB,CAAC,GAAG,iBAAiB,kBAAkB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAkB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,GAAG,iBAAiB,kBAAkB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,GAAG,iBAAiB,kBAAkB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,GAAG,iBAAiB,kBAAkB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAkB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAkB,CAAC,IAAI,kBAAmB,kBAAkB,CAAC,KAAK,iBAAiB,kBAAkB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAkB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,GAAG,iBAAiB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAkB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAkB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAkB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,KAAK,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,KAAK,kBAAmB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAkB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,GAAG,iBAAiB,kBAAkB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,GAAG,kBAAmB,kBAAmB,CAAC,IAAI,iBAAkB,kBAAmB,CAAC,EAAE,iBAAkB,kBAAmB,CAAC,EAAE,kBAAmB,kBAAmB,CAAC,GAAG,iBAAkB,kBAAmB,CAAC,IAAI,kBAAmB,kBAAmB,CAAC,EAAE,iBAAkB,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","file":"static/js/main.ec70748f.chunk.js","sourcesContent":["module.exports = {\"planes\":[[3.6484542016,0.361993,0.303861],[3.615202697,0.361993,0.303861],[3.6071881495,0.361993,0.303861],[3.5867815528,0.361993,0.303861],[3.5857837688,0.361993,0.303861],[3.5847955927,0.361993,0.303861],[3.577642578,0.361993,0.303861],[3.575794559,0.361993,0.303861],[3.5738240315,0.361993,0.303861],[3.572634181,0.361993,0.303861],[3.5710235507,0.361993,0.303861],[3.5629633804,0.361993,0.303861],[3.5615573407,0.361993,0.303861],[3.557708007,0.361993,0.303861],[3.5555598005,0.361993,0.303861],[3.5509247194,0.361993,0.303861],[3.5465704225,0.361993,0.303861],[3.5463628995,0.361993,0.303861],[3.539007904,0.361993,0.303861],[3.5189576435,0.361993,0.303861],[3.5045126055,0.361993,0.303861],[3.5034055773,0.361993,0.303861],[3.4915663064,0.361993,0.303861],[3.4789114705,0.361993,0.303861],[3.4685401967,0.361993,0.303861],[3.4456085126,0.361993,0.303861],[3.423138351,0.361993,0.303861]],\"points\":[[3,0.701533626649904,0.507265870521683],[4.5,0.031533626649904,-0.162734129478317],[5,0.701533626649904,0.837265870521683],[4.5,0.031533626649904,-0.162734129478317],[4.5,0.701533626649904,0.837265870521683],[4,0.701533626649904,-0.832734129478317],[4.5,0.031533626649904,-0.162734129478317],[4,-0.298466373350096,-0.162734129478317],[3.5,0.031533626649904,0.167265870521683],[3.5,-0.298466373350096,0.167265870521683],[3,-0.628466373350096,-0.162734129478317],[3,-0.298466373350096,0.837265870521683],[3,0.701533626649904,-0.492734129478317],[4.5,0.371533626649904,-0.162734129478317],[5,0.701533626649904,0.837265870521683],[4,-0.298466373350096,-0.162734129478317],[4.5,0.371533626649904,0.507265870521683],[5,0.031533626649904,0.507265870521683],[3.5,-1.2984663733501,-0.832734129478317],[3,-1.6284663733501,-0.832734129478317],[2,0.371533626649904,-2.16273412947832],[3.5,0.031533626649904,-0.162734129478317],[4,0.031533626649904,-0.162734129478317],[4.5,0.701533626649904,0.837265870521683],[5,-0.298466373350096,0.837265870521683],[3,-0.628466373350096,0.167265870521683],[3.5,0.031533626649904,0.837265870521683],[2.5,-1.6284663733501,0.837265870521683],[1.5,-0.628466373350096,0.507265870521683],[3.5,0.031533626649904,-0.162734129478317],[4.5,-0.298466373350096,0.167265870521683],[3,-0.298466373350096,-0.832734129478317],[4,0.701533626649904,-0.162734129478317],[4,0.371533626649904,-0.492734129478317],[2,-0.968466373350096,0.837265870521683],[4.5,0.701533626649904,0.167265870521683],[5,0.701533626649904,0.837265870521683],[5,0.371533626649904,0.837265870521683],[5,0.371533626649904,0.507265870521683],[3.5,-0.298466373350096,-1.49273412947832],[5,0.031533626649904,0.507265870521683],[4.5,0.701533626649904,0.837265870521683],[4,-0.298466373350096,-0.162734129478317],[2.5,0.031533626649904,-2.49273412947832],[5,-0.298466373350096,0.167265870521683],[3.5,0.701533626649904,-1.83273412947832],[4.5,0.371533626649904,0.837265870521683],[5,0.371533626649904,0.837265870521683],[3,0.701533626649904,-0.162734129478317],[1,-0.628466373350096,-3.16273412947832],[3.5,0.701533626649904,-1.16273412947832],[4.5,0.701533626649904,0.507265870521683],[5,0.371533626649904,0.167265870521683],[4,-0.628466373350096,0.507265870521683],[3,0.701533626649904,0.837265870521683],[4.5,0.701533626649904,0.837265870521683],[2.5,-0.968466373350096,0.837265870521683],[2.5,0.031533626649904,0.837265870521683],[5,-1.6284663733501,-0.162734129478317],[4,0.371533626649904,0.837265870521683],[3.5,0.031533626649904,0.837265870521683],[4.5,0.701533626649904,0.837265870521683],[3,0.701533626649904,0.507265870521683],[3.5,0.371533626649904,0.507265870521683],[5,-0.628466373350096,-0.832734129478317],[3,0.701533626649904,0.507265870521683],[5,0.031533626649904,0.837265870521683],[4.5,0.701533626649904,0.837265870521683],[4,-0.628466373350096,0.167265870521683],[4.5,0.701533626649904,0.167265870521683],[4.5,0.701533626649904,0.167265870521683],[3,0.701533626649904,0.507265870521683],[2.5,-1.6284663733501,0.837265870521683],[4,0.701533626649904,-0.162734129478317],[2,0.371533626649904,0.837265870521683],[3,-0.298466373350096,-0.492734129478317],[2.5,-0.298466373350096,-1.49273412947832],[3,0.701533626649904,0.167265870521683],[5,0.701533626649904,0.837265870521683],[5,0.371533626649904,0.837265870521683],[5,0.701533626649904,0.837265870521683],[4.5,-0.298466373350096,0.167265870521683],[3.5,-0.628466373350096,0.167265870521683],[3.5,0.031533626649904,0.837265870521683],[4.5,0.031533626649904,0.837265870521683],[4.5,0.031533626649904,0.507265870521683],[4.5,0.031533626649904,0.837265870521683],[3,0.031533626649904,-0.492734129478317],[3,0.031533626649904,-0.162734129478317],[3,-1.2984663733501,0.507265870521683],[3.5,0.371533626649904,0.837265870521683],[2.5,-0.298466373350096,0.167265870521683],[3.5,-0.628466373350096,-0.832734129478317],[3,0.031533626649904,-0.492734129478317],[4,0.701533626649904,0.507265870521683],[4,0.701533626649904,0.507265870521683],[5,0.701533626649904,0.837265870521683],[2.5,0.701533626649904,-0.162734129478317],[3.5,-0.298466373350096,0.507265870521683],[3.5,-0.628466373350096,-0.492734129478317],[4,0.371533626649904,0.507265870521683],[3.5,0.701533626649904,-1.83273412947832],[3,-0.298466373350096,0.837265870521683],[4,0.031533626649904,-0.162734129478317],[3,0.031533626649904,0.837265870521683],[3.5,0.031533626649904,0.167265870521683],[3.5,-0.298466373350096,0.837265870521683],[3,0.701533626649904,-0.832734129478317],[2.5,-1.9684663733501,-0.492734129478317],[1.5,-2.6284663733501,-0.492734129478317],[3.5,-0.968466373350096,-1.49273412947832],[4,-0.968466373350096,0.837265870521683],[3.5,-0.628466373350096,0.507265870521683],[4,-0.628466373350096,0.837265870521683],[3,0.371533626649904,0.507265870521683],[2.5,0.031533626649904,-0.832734129478317],[4,-0.628466373350096,0.507265870521683],[4,-0.298466373350096,0.167265870521683],[5,-0.968466373350096,0.837265870521683],[4.5,0.371533626649904,0.837265870521683],[3,-0.968466373350096,-1.49273412947832],[4,0.371533626649904,-1.16273412947832],[4,0.701533626649904,0.837265870521683],[2.5,0.701533626649904,0.837265870521683],[4,0.701533626649904,0.837265870521683],[4,0.701533626649904,0.837265870521683],[3,0.371533626649904,-0.162734129478317],[4,0.701533626649904,-0.162734129478317],[2,-1.9684663733501,-1.83273412947832],[1.5,0.701533626649904,-2.16273412947832],[1,-0.968466373350096,0.837265870521683],[3,0.371533626649904,-0.492734129478317],[5,0.701533626649904,0.837265870521683],[4.5,0.701533626649904,-1.49273412947832],[4.5,-0.628466373350096,0.837265870521683],[4.5,0.031533626649904,0.507265870521683],[4,-0.298466373350096,0.837265870521683],[3,0.701533626649904,0.837265870521683],[2.5,0.371533626649904,-2.49273412947832],[3.5,-0.298466373350096,-0.162734129478317],[3.5,-0.298466373350096,-0.162734129478317],[4,0.031533626649904,0.167265870521683],[3.5,0.701533626649904,-1.83273412947832],[3.5,-0.628466373350096,-0.162734129478317],[4.5,0.701533626649904,0.837265870521683],[4,0.371533626649904,0.507265870521683],[4.5,0.701533626649904,0.507265870521683],[2.5,0.701533626649904,-1.16273412947832],[4.5,0.701533626649904,0.837265870521683],[4,0.031533626649904,0.167265870521683],[3,0.371533626649904,0.507265870521683],[4.5,-0.298466373350096,0.837265870521683],[4,0.701533626649904,0.837265870521683],[4.5,0.701533626649904,-0.162734129478317],[4.5,0.701533626649904,0.837265870521683],[3.5,0.701533626649904,-2.16273412947832],[3.5,-0.298466373350096,0.507265870521683],[4.5,0.701533626649904,0.837265870521683],[4,-1.2984663733501,-0.832734129478317],[4,-0.298466373350096,-0.832734129478317],[4.5,0.371533626649904,-0.492734129478317],[5,0.701533626649904,-0.492734129478317],[4,-0.628466373350096,0.507265870521683],[4,-0.628466373350096,0.837265870521683],[5,-0.968466373350096,-0.162734129478317],[3,0.031533626649904,0.507265870521683],[4,0.701533626649904,-0.162734129478317],[2.5,0.701533626649904,-0.492734129478317],[1.5,-0.968466373350096,-0.832734129478317],[4,0.371533626649904,-0.832734129478317],[4,0.701533626649904,-0.492734129478317],[4.5,-0.628466373350096,-0.492734129478317],[2,-1.2984663733501,-1.49273412947832],[1.5,0.371533626649904,-1.83273412947832],[2,-0.628466373350096,-1.83273412947832],[3,0.371533626649904,-1.49273412947832],[3.5,0.701533626649904,-1.83273412947832],[3,0.701533626649904,-1.49273412947832],[3,-0.628466373350096,-2.16273412947832],[3,0.031533626649904,-1.83273412947832],[3.5,0.371533626649904,-1.83273412947832],[3,0.031533626649904,-2.16273412947832],[3.5,0.701533626649904,-1.16273412947832],[3.5,0.031533626649904,-1.16273412947832],[5,0.371533626649904,0.167265870521683],[4.5,0.701533626649904,-1.16273412947832],[2.5,-0.628466373350096,-1.49273412947832],[2,0.371533626649904,-1.83273412947832],[4.5,0.701533626649904,0.837265870521683],[3.5,0.701533626649904,0.837265870521683],[5,0.701533626649904,0.837265870521683],[4.5,-0.298466373350096,-0.162734129478317],[3.5,-0.298466373350096,0.837265870521683],[4,0.031533626649904,0.507265870521683],[4,-1.2984663733501,0.837265870521683],[4,-0.298466373350096,-0.162734129478317],[4.5,0.701533626649904,-0.162734129478317],[3,-0.298466373350096,0.167265870521683],[3,0.701533626649904,-0.832734129478317],[4.5,-0.298466373350096,-0.162734129478317],[4.5,0.701533626649904,0.837265870521683],[3,0.371533626649904,0.837265870521683],[2,0.701533626649904,0.507265870521683],[4,0.701533626649904,-0.162734129478317],[3.5,0.031533626649904,0.837265870521683],[5,0.371533626649904,-0.832734129478317],[2.5,0.031533626649904,0.837265870521683],[4.5,-0.968466373350096,0.837265870521683],[3.5,0.701533626649904,-0.162734129478317],[3,0.371533626649904,0.507265870521683],[3,0.371533626649904,0.837265870521683],[3,0.031533626649904,-0.162734129478317],[5,0.371533626649904,0.837265870521683],[3,-0.298466373350096,-0.162734129478317],[3.5,-0.298466373350096,-0.162734129478317],[4,-0.298466373350096,-0.832734129478317],[3.5,-0.298466373350096,0.507265870521683],[5,-0.628466373350096,0.837265870521683],[5,0.371533626649904,0.507265870521683],[3.5,0.371533626649904,0.507265870521683],[4.5,0.371533626649904,0.507265870521683],[3,0.701533626649904,0.507265870521683],[4.5,-0.628466373350096,-0.162734129478317],[4.5,0.701533626649904,-1.49273412947832],[5,0.701533626649904,0.837265870521683],[4,0.701533626649904,0.507265870521683],[2.5,0.031533626649904,-0.162734129478317],[1.5,-0.298466373350096,-2.49273412947832],[3.5,-1.2984663733501,-1.16273412947832],[4.5,0.031533626649904,0.837265870521683],[4,0.031533626649904,0.837265870521683],[5,0.701533626649904,0.507265870521683],[3.5,-0.298466373350096,0.837265870521683],[5,0.701533626649904,-0.492734129478317],[3.5,-0.628466373350096,0.167265870521683],[4,0.371533626649904,0.507265870521683],[4.5,0.701533626649904,-0.162734129478317],[5,0.031533626649904,0.167265870521683],[3.5,-0.298466373350096,-0.492734129478317],[4,-0.298466373350096,0.167265870521683],[2.5,0.701533626649904,-1.83273412947832],[3,0.701533626649904,-0.492734129478317],[3,-0.968466373350096,-0.492734129478317],[4.5,0.371533626649904,0.837265870521683],[2.5,0.371533626649904,-2.49273412947832],[4.5,0.031533626649904,0.167265870521683],[5,-0.628466373350096,0.837265870521683],[1,-0.628466373350096,-0.832734129478317],[1.5,0.371533626649904,-1.16273412947832],[4.5,0.701533626649904,0.837265870521683],[4.5,-0.298466373350096,-0.832734129478317],[4,0.701533626649904,0.167265870521683],[3,0.701533626649904,-0.492734129478317],[2,-0.628466373350096,-1.16273412947832],[2,0.031533626649904,-1.83273412947832],[4,0.701533626649904,0.837265870521683],[1.5,-0.968466373350096,-0.492734129478317],[4.5,0.371533626649904,0.507265870521683],[3.5,0.371533626649904,0.837265870521683],[4,0.371533626649904,0.167265870521683],[3.5,-0.298466373350096,0.507265870521683],[4,-0.298466373350096,-1.16273412947832],[4,0.701533626649904,0.507265870521683],[2.5,0.031533626649904,0.167265870521683],[4.5,-0.968466373350096,0.837265870521683],[3,0.371533626649904,0.167265870521683],[1.5,-1.2984663733501,-2.49273412947832],[2.5,-0.298466373350096,-0.162734129478317],[2,-0.298466373350096,-0.162734129478317],[4.5,0.701533626649904,0.837265870521683],[3,0.371533626649904,0.837265870521683],[5,-1.9684663733501,0.167265870521683],[3,-1.2984663733501,0.837265870521683],[3,-1.9684663733501,-2.49273412947832],[3,-0.628466373350096,0.167265870521683],[4,0.701533626649904,0.837265870521683],[3,0.371533626649904,0.167265870521683],[4.5,0.371533626649904,0.837265870521683],[3.5,-0.628466373350096,0.507265870521683],[3,0.371533626649904,0.837265870521683],[3.5,-0.298466373350096,0.837265870521683],[3,0.701533626649904,0.167265870521683],[3.5,-0.298466373350096,0.837265870521683],[4.5,0.701533626649904,-0.162734129478317],[3,0.031533626649904,0.167265870521683],[4,-0.298466373350096,0.837265870521683],[3.5,0.371533626649904,0.837265870521683],[3,0.701533626649904,-1.16273412947832],[4,0.371533626649904,-0.162734129478317],[3,0.371533626649904,-1.16273412947832],[4,-0.968466373350096,0.837265870521683],[1.5,-1.6284663733501,0.167265870521683],[4.5,0.701533626649904,0.837265870521683],[3.5,-0.968466373350096,0.507265870521683],[2.5,-0.628466373350096,-0.162734129478317],[1.5,0.701533626649904,-2.49273412947832],[1,0.031533626649904,-2.83273412947832],[4.5,0.371533626649904,0.837265870521683],[4.5,0.701533626649904,-2.49273412947832],[3,0.701533626649904,0.837265870521683],[2.5,0.031533626649904,0.507265870521683],[4,0.031533626649904,-0.162734129478317],[4,-0.298466373350096,0.167265870521683],[3,0.701533626649904,0.837265870521683],[5,0.371533626649904,0.837265870521683],[3.5,-1.2984663733501,-0.162734129478317],[4,0.031533626649904,0.507265870521683],[2,-0.298466373350096,0.837265870521683],[4,0.701533626649904,-0.492734129478317],[5,0.701533626649904,0.837265870521683],[4,0.701533626649904,-0.162734129478317],[2.5,0.701533626649904,-3.16273412947832],[3,-0.298466373350096,-1.16273412947832],[4.5,-0.298466373350096,-0.492734129478317],[5,-0.298466373350096,0.507265870521683],[3,-0.298466373350096,0.837265870521683],[1,0.701533626649904,-0.162734129478317],[4,0.701533626649904,0.167265870521683],[3,0.031533626649904,0.507265870521683],[4.5,0.031533626649904,-0.492734129478317],[4.5,0.371533626649904,0.167265870521683],[4,0.371533626649904,0.837265870521683],[5,0.701533626649904,0.507265870521683],[1.5,-1.6284663733501,-0.162734129478317],[4.5,0.371533626649904,0.167265870521683],[3,-1.2984663733501,-0.832734129478317],[4.5,0.371533626649904,0.507265870521683],[4,-0.298466373350096,-1.49273412947832],[4.5,0.031533626649904,0.507265870521683],[4,0.371533626649904,0.167265870521683],[5,0.701533626649904,0.507265870521683],[4,-0.298466373350096,0.837265870521683],[5,0.701533626649904,0.837265870521683],[2.5,-0.628466373350096,-0.492734129478317],[4,0.701533626649904,0.507265870521683],[3.5,-0.628466373350096,0.837265870521683],[4.5,0.701533626649904,0.507265870521683],[2.5,-1.2984663733501,-1.16273412947832],[4,-0.628466373350096,0.507265870521683],[4,0.031533626649904,0.837265870521683],[3.5,0.371533626649904,0.837265870521683],[2.5,0.031533626649904,0.507265870521683],[4.5,0.701533626649904,0.837265870521683],[3.5,0.031533626649904,-0.162734129478317],[4.5,0.371533626649904,0.837265870521683],[2.5,0.701533626649904,-0.162734129478317],[1.5,0.371533626649904,-2.16273412947832],[4.5,0.701533626649904,0.167265870521683],[5,-1.9684663733501,0.837265870521683],[3.5,0.031533626649904,0.167265870521683],[2,-1.2984663733501,-0.492734129478317],[4.5,0.701533626649904,0.837265870521683],[2.5,-0.968466373350096,0.167265870521683],[3.5,0.371533626649904,0.837265870521683],[4,0.031533626649904,0.507265870521683],[3,0.701533626649904,0.507265870521683],[3.5,0.701533626649904,0.837265870521683],[3.5,-0.298466373350096,0.837265870521683],[3,0.701533626649904,-1.83273412947832],[4,0.031533626649904,0.167265870521683],[4.5,-0.298466373350096,-0.162734129478317],[5,0.371533626649904,0.837265870521683],[3.5,-0.298466373350096,0.837265870521683],[4,-0.628466373350096,-0.162734129478317],[3,0.371533626649904,-1.16273412947832],[3.5,-0.628466373350096,0.167265870521683],[4.5,0.701533626649904,0.837265870521683],[3.5,0.701533626649904,-0.832734129478317],[3,0.371533626649904,0.507265870521683],[5,0.701533626649904,0.837265870521683],[4.5,0.031533626649904,0.167265870521683],[4,0.031533626649904,-1.16273412947832],[5,0.701533626649904,0.167265870521683],[4,0.031533626649904,0.507265870521683],[4.5,-0.298466373350096,-0.832734129478317],[4.5,0.701533626649904,0.167265870521683],[3,-1.2984663733501,-1.83273412947832],[5,0.701533626649904,0.837265870521683],[4,0.371533626649904,0.837265870521683],[4.5,0.701533626649904,0.837265870521683],[5,0.371533626649904,0.837265870521683],[2.5,-0.628466373350096,0.167265870521683],[4,0.371533626649904,0.507265870521683],[3.5,-0.628466373350096,-0.832734129478317],[4.5,0.031533626649904,0.507265870521683],[4.5,0.701533626649904,-0.492734129478317],[3,-1.6284663733501,-2.49273412947832],[5,0.701533626649904,0.507265870521683],[4.5,0.701533626649904,0.837265870521683],[3.5,0.031533626649904,0.507265870521683],[4.5,0.701533626649904,0.167265870521683],[4.5,0.701533626649904,-0.162734129478317],[3.5,0.701533626649904,0.507265870521683],[4,0.701533626649904,-0.162734129478317],[3,-0.968466373350096,0.167265870521683],[3,0.701533626649904,0.837265870521683],[3.5,-0.968466373350096,-0.162734129478317],[4,0.371533626649904,0.507265870521683],[3.5,0.031533626649904,-1.83273412947832],[4,-0.298466373350096,-0.492734129478317],[2.5,-0.628466373350096,-0.832734129478317],[2,-1.2984663733501,-1.16273412947832],[4.5,0.031533626649904,-0.162734129478317],[3,0.371533626649904,-0.162734129478317],[4.5,0.701533626649904,0.837265870521683],[4.5,-0.628466373350096,0.507265870521683],[2.5,-1.2984663733501,0.167265870521683],[5,0.371533626649904,0.837265870521683],[2.5,-0.298466373350096,-0.162734129478317],[5,0.371533626649904,0.837265870521683],[3.5,0.371533626649904,0.507265870521683],[3.5,0.031533626649904,0.837265870521683],[3.5,0.031533626649904,0.837265870521683],[5,0.701533626649904,0.837265870521683],[4.5,-0.298466373350096,0.837265870521683],[3.5,0.031533626649904,-0.492734129478317],[4,0.371533626649904,0.837265870521683],[4,0.701533626649904,0.837265870521683],[3,-0.628466373350096,-0.162734129478317],[5,0.701533626649904,0.837265870521683],[3.5,-0.968466373350096,0.837265870521683],[4.5,0.701533626649904,0.837265870521683],[4,-0.628466373350096,0.837265870521683],[1,0.031533626649904,-3.16273412947832],[4.5,0.701533626649904,0.837265870521683],[4.5,0.701533626649904,0.507265870521683],[4.5,0.701533626649904,0.837265870521683],[4,-0.628466373350096,0.167265870521683],[4,-0.968466373350096,0.167265870521683],[5,0.371533626649904,0.507265870521683],[4,-0.298466373350096,-0.492734129478317],[3.5,0.371533626649904,0.507265870521683],[4.5,0.371533626649904,0.837265870521683],[5,0.701533626649904,0.837265870521683],[3.5,0.031533626649904,0.167265870521683],[2.5,0.701533626649904,0.507265870521683],[2,-1.9684663733501,0.167265870521683],[2.5,0.031533626649904,-0.832734129478317],[4.5,0.031533626649904,0.837265870521683],[3.5,-0.298466373350096,0.507265870521683],[4.5,0.701533626649904,0.837265870521683],[5,0.701533626649904,0.837265870521683],[2,-0.628466373350096,0.167265870521683],[3,-0.968466373350096,0.507265870521683],[1,-0.628466373350096,0.507265870521683],[2,0.031533626649904,0.167265870521683],[3.5,0.701533626649904,0.507265870521683],[3.5,-0.298466373350096,-0.832734129478317],[3,0.031533626649904,-0.162734129478317],[5,0.701533626649904,0.837265870521683],[3,-2.2984663733501,0.507265870521683],[3.5,-0.968466373350096,-1.16273412947832],[3.5,-0.968466373350096,-0.162734129478317],[3,0.371533626649904,0.507265870521683],[3.5,0.031533626649904,0.837265870521683],[4.5,0.031533626649904,0.507265870521683],[4,0.701533626649904,0.507265870521683],[4,0.701533626649904,-0.162734129478317],[2.5,0.701533626649904,-0.492734129478317],[3.5,0.701533626649904,-0.492734129478317],[4,0.031533626649904,-0.162734129478317],[2.5,-0.628466373350096,-1.16273412947832],[3.5,0.371533626649904,0.167265870521683],[3,-0.628466373350096,0.167265870521683],[2.5,0.031533626649904,-0.492734129478317],[4.5,0.031533626649904,0.837265870521683],[2.5,0.031533626649904,-0.162734129478317],[3,0.371533626649904,0.507265870521683],[4,-0.298466373350096,-0.162734129478317],[3,0.371533626649904,0.507265870521683],[4.5,-0.298466373350096,-0.492734129478317],[3,0.371533626649904,-2.83273412947832],[3,-1.6284663733501,-0.492734129478317],[2.5,-0.628466373350096,0.837265870521683],[4.5,-0.628466373350096,0.167265870521683],[3.5,-0.968466373350096,0.507265870521683],[3.5,0.031533626649904,-0.492734129478317],[3,-0.968466373350096,0.507265870521683],[4.5,0.371533626649904,0.167265870521683],[4,-0.628466373350096,0.507265870521683],[3.5,0.701533626649904,0.507265870521683],[3,-0.298466373350096,-2.49273412947832],[4,0.701533626649904,0.837265870521683],[2.5,0.031533626649904,-0.492734129478317],[3.5,-2.2984663733501,0.837265870521683],[3.5,0.031533626649904,-0.832734129478317],[3.5,0.371533626649904,0.837265870521683],[3.5,0.371533626649904,0.837265870521683],[3.5,0.031533626649904,-0.492734129478317],[4.5,-0.968466373350096,0.167265870521683],[3.5,-0.628466373350096,-0.162734129478317],[4.5,0.031533626649904,-0.492734129478317],[3,0.371533626649904,0.167265870521683],[5,0.371533626649904,0.837265870521683],[4,-0.298466373350096,0.507265870521683],[3,0.701533626649904,0.167265870521683],[3.5,-0.298466373350096,0.167265870521683],[4,-0.968466373350096,0.837265870521683],[3.5,-0.968466373350096,0.837265870521683],[2,-0.298466373350096,0.837265870521683],[5,0.701533626649904,0.837265870521683],[5,0.701533626649904,0.837265870521683],[4,0.031533626649904,-0.162734129478317],[3,0.371533626649904,0.507265870521683],[3,0.031533626649904,0.837265870521683],[5,0.701533626649904,0.837265870521683],[4.5,0.701533626649904,0.837265870521683],[5,0.701533626649904,0.837265870521683],[3,0.701533626649904,0.167265870521683],[3.5,0.031533626649904,-0.832734129478317],[3,0.701533626649904,-0.162734129478317],[3.5,0.701533626649904,0.507265870521683],[3.5,-0.298466373350096,0.167265870521683],[4.5,0.031533626649904,0.837265870521683],[1.5,-0.298466373350096,-1.49273412947832],[2.5,0.701533626649904,0.167265870521683],[4,0.371533626649904,-0.162734129478317],[4,0.031533626649904,0.837265870521683],[4.5,0.701533626649904,-0.162734129478317],[4,0.371533626649904,-0.162734129478317],[3.5,-0.298466373350096,-0.492734129478317],[4,0.031533626649904,0.837265870521683],[1,0.371533626649904,-0.162734129478317],[1.5,0.371533626649904,-0.832734129478317],[3,0.371533626649904,-0.832734129478317],[3.5,0.031533626649904,0.167265870521683],[2,0.031533626649904,0.167265870521683],[3,-0.298466373350096,-0.162734129478317],[4,0.701533626649904,0.507265870521683],[3.5,0.031533626649904,0.167265870521683],[4.5,0.031533626649904,0.507265870521683],[3.5,0.031533626649904,-1.49273412947832],[2.5,0.371533626649904,0.167265870521683],[4,0.371533626649904,0.507265870521683],[5,0.371533626649904,0.507265870521683],[4.5,0.371533626649904,-0.492734129478317],[4.5,-0.298466373350096,0.507265870521683],[2.5,0.371533626649904,-1.16273412947832],[4,0.701533626649904,-0.162734129478317],[4.5,-0.298466373350096,0.837265870521683],[3.5,0.031533626649904,-0.162734129478317],[3.5,0.031533626649904,-1.16273412947832],[4,-0.298466373350096,0.167265870521683],[4.5,0.371533626649904,0.837265870521683],[3.5,-0.298466373350096,-0.492734129478317],[4,-0.298466373350096,-0.162734129478317],[3,0.701533626649904,0.837265870521683],[4.5,0.371533626649904,0.167265870521683],[4.5,0.031533626649904,-0.162734129478317],[2.5,0.371533626649904,-2.49273412947832],[4,0.371533626649904,0.837265870521683],[5,0.371533626649904,0.837265870521683],[3,0.701533626649904,0.837265870521683],[2.5,-1.2984663733501,0.167265870521683],[4.5,0.371533626649904,0.837265870521683],[4,0.701533626649904,-0.162734129478317],[3.5,-0.968466373350096,-0.162734129478317],[3.5,-0.298466373350096,0.167265870521683],[2.5,0.701533626649904,-1.16273412947832],[4,0.371533626649904,0.507265870521683],[4.5,0.701533626649904,0.837265870521683],[5,-0.298466373350096,0.507265870521683],[3,0.031533626649904,-0.492734129478317],[1.5,-0.628466373350096,-1.49273412947832],[4,0.031533626649904,0.167265870521683],[2,-1.2984663733501,0.167265870521683],[4.5,0.371533626649904,0.507265870521683],[3.5,0.371533626649904,0.167265870521683],[5,0.371533626649904,0.167265870521683],[2.5,-1.2984663733501,0.507265870521683],[3.5,-0.968466373350096,0.507265870521683],[1.5,-0.628466373350096,0.167265870521683],[3.5,0.701533626649904,0.507265870521683],[1,-0.628466373350096,-1.49273412947832],[3.5,-0.968466373350096,0.837265870521683],[4.5,0.371533626649904,0.507265870521683],[4,0.371533626649904,0.167265870521683],[4,0.371533626649904,0.167265870521683],[4,0.371533626649904,0.507265870521683],[4,0.031533626649904,0.507265870521683],[4,0.031533626649904,0.837265870521683],[1.5,0.031533626649904,-1.49273412947832],[4,0.031533626649904,0.167265870521683],[4,0.701533626649904,-0.162734129478317],[3.5,0.031533626649904,-0.492734129478317],[2,-0.968466373350096,-2.16273412947832],[4,0.031533626649904,0.507265870521683],[3,0.031533626649904,-0.162734129478317],[2,-0.968466373350096,-0.492734129478317],[4,-1.2984663733501,0.167265870521683],[4,0.701533626649904,-1.16273412947832],[4,0.701533626649904,-0.162734129478317],[3.5,-0.298466373350096,0.167265870521683],[3.5,0.371533626649904,0.167265870521683],[5,0.701533626649904,0.507265870521683],[4.5,-0.298466373350096,-1.16273412947832],[1.5,0.031533626649904,-1.49273412947832],[3.5,0.701533626649904,0.167265870521683],[3.5,0.371533626649904,0.507265870521683],[4,0.371533626649904,0.167265870521683],[4.5,0.701533626649904,0.837265870521683],[2.5,0.701533626649904,-0.162734129478317],[3.5,0.031533626649904,0.507265870521683],[4,0.371533626649904,0.837265870521683],[4,0.701533626649904,0.837265870521683],[3.5,-0.298466373350096,0.167265870521683],[3.5,0.031533626649904,0.167265870521683],[1.5,-0.968466373350096,0.507265870521683],[3.5,0.371533626649904,0.837265870521683],[3,0.371533626649904,-1.83273412947832],[2.5,-0.298466373350096,-0.162734129478317],[3.5,-0.628466373350096,-0.832734129478317],[4,0.371533626649904,0.507265870521683],[3.5,0.031533626649904,-0.162734129478317],[2,-1.9684663733501,-0.492734129478317],[3.5,0.371533626649904,-0.162734129478317],[3,0.701533626649904,-1.83273412947832],[4.5,-0.298466373350096,0.837265870521683],[4.5,-0.298466373350096,0.167265870521683],[5,0.701533626649904,0.507265870521683],[2,-0.968466373350096,0.167265870521683],[3.5,-0.298466373350096,-0.492734129478317],[3,-0.968466373350096,0.167265870521683],[4.5,-0.628466373350096,-0.162734129478317],[4,0.701533626649904,0.837265870521683],[4,0.031533626649904,0.167265870521683],[4,0.371533626649904,0.837265870521683],[4.5,0.031533626649904,0.837265870521683],[3.5,0.701533626649904,-0.832734129478317],[3.5,0.371533626649904,-0.162734129478317],[3.5,0.371533626649904,0.507265870521683],[3.5,0.371533626649904,-0.162734129478317],[5,-0.298466373350096,0.837265870521683],[3.5,-0.298466373350096,0.167265870521683],[3,-0.968466373350096,0.167265870521683],[3.5,0.031533626649904,-0.162734129478317],[4.5,0.371533626649904,0.507265870521683],[3,-0.298466373350096,0.167265870521683],[4,0.701533626649904,0.837265870521683],[3.5,0.031533626649904,0.507265870521683],[3.5,-0.298466373350096,-0.492734129478317],[2.5,0.701533626649904,0.837265870521683],[4,0.701533626649904,0.507265870521683],[3,-0.628466373350096,-0.162734129478317],[4.5,0.371533626649904,0.837265870521683],[4,-2.6284663733501,-2.49273412947832],[5,0.701533626649904,0.837265870521683],[3.5,-1.2984663733501,-1.16273412947832],[1,-1.6284663733501,-0.832734129478317],[4.5,-0.298466373350096,-0.162734129478317],[4.5,-0.298466373350096,-0.832734129478317],[4,0.031533626649904,0.837265870521683],[4,0.701533626649904,0.507265870521683],[3,0.031533626649904,-0.492734129478317],[3,-0.298466373350096,0.167265870521683],[4,0.701533626649904,0.837265870521683],[3.5,-0.628466373350096,-0.162734129478317],[3,0.031533626649904,0.837265870521683],[4.5,0.031533626649904,0.837265870521683],[1.5,-1.2984663733501,0.507265870521683],[3,0.701533626649904,0.837265870521683],[4.5,-0.298466373350096,0.507265870521683],[3,0.701533626649904,0.837265870521683],[3.5,0.031533626649904,0.167265870521683],[2,-1.2984663733501,-2.16273412947832],[5,0.701533626649904,0.837265870521683],[3.5,-0.968466373350096,-0.162734129478317],[4,0.031533626649904,0.167265870521683],[4.5,-0.298466373350096,0.167265870521683],[3,0.031533626649904,-1.16273412947832],[4.5,0.701533626649904,0.507265870521683],[3,0.371533626649904,0.837265870521683],[4.5,0.701533626649904,-0.492734129478317],[5,0.701533626649904,0.837265870521683],[3,-0.298466373350096,-0.162734129478317],[4.5,0.701533626649904,0.167265870521683],[1.5,-0.298466373350096,-2.16273412947832],[3,0.031533626649904,0.507265870521683],[2.5,-0.628466373350096,-0.162734129478317],[3,0.701533626649904,-0.832734129478317],[3.5,0.031533626649904,0.507265870521683],[1,-1.2984663733501,-0.162734129478317],[4.5,0.701533626649904,-0.162734129478317],[3.5,0.701533626649904,0.167265870521683],[2.5,0.031533626649904,0.167265870521683],[4,-0.298466373350096,0.507265870521683],[3,0.701533626649904,0.837265870521683],[1,-0.298466373350096,0.837265870521683],[3.5,-1.6284663733501,-0.162734129478317],[3,-0.298466373350096,-0.162734129478317],[2.5,-0.968466373350096,-0.162734129478317],[3.5,0.031533626649904,0.167265870521683],[3,-0.968466373350096,0.837265870521683],[3.5,0.031533626649904,-0.162734129478317],[3.5,0.701533626649904,-1.16273412947832],[2,-0.298466373350096,0.507265870521683],[2.5,-1.2984663733501,-0.162734129478317],[4.5,0.371533626649904,0.837265870521683],[1.5,-0.298466373350096,-2.16273412947832],[3.5,-1.2984663733501,0.507265870521683],[3.5,-0.628466373350096,0.837265870521683],[4.5,0.701533626649904,-0.492734129478317],[4,0.701533626649904,0.167265870521683],[3.5,-0.968466373350096,0.167265870521683],[3,-0.628466373350096,0.837265870521683],[5,0.701533626649904,0.837265870521683],[5,0.701533626649904,0.837265870521683],[3.5,-1.9684663733501,-0.832734129478317],[5,0.701533626649904,0.837265870521683],[4.5,0.701533626649904,0.507265870521683],[4,0.371533626649904,0.507265870521683],[2.5,-1.6284663733501,0.167265870521683],[3,0.031533626649904,0.837265870521683],[2.5,-0.298466373350096,0.507265870521683],[4,0.371533626649904,0.837265870521683],[4,0.371533626649904,0.837265870521683],[4.5,0.701533626649904,0.837265870521683],[4,0.701533626649904,-0.162734129478317],[3.5,-1.6284663733501,0.167265870521683],[4.5,0.701533626649904,-0.162734129478317],[5,0.701533626649904,0.837265870521683],[5,0.701533626649904,0.507265870521683],[5,-0.298466373350096,0.837265870521683],[4,0.701533626649904,0.837265870521683],[4.5,0.031533626649904,0.507265870521683],[4,-0.298466373350096,0.507265870521683],[3,-1.2984663733501,-0.162734129478317],[2,-0.298466373350096,-1.49273412947832],[3,-0.298466373350096,0.167265870521683],[2,0.701533626649904,-0.832734129478317],[4.5,0.031533626649904,0.837265870521683],[3,0.031533626649904,0.837265870521683],[3,-0.628466373350096,0.837265870521683],[2,0.701533626649904,-1.49273412947832],[2,0.701533626649904,0.167265870521683],[3,0.371533626649904,0.837265870521683],[1.5,-1.2984663733501,0.167265870521683],[3.5,0.031533626649904,0.837265870521683],[3.5,-0.968466373350096,0.837265870521683],[4,0.371533626649904,0.837265870521683],[2.5,-0.628466373350096,0.167265870521683],[3,0.031533626649904,-0.492734129478317],[3,0.371533626649904,-0.492734129478317],[5,0.701533626649904,0.507265870521683],[4,0.371533626649904,-0.492734129478317],[4,0.031533626649904,0.837265870521683],[3,-0.968466373350096,0.167265870521683],[1,-1.9684663733501,-1.83273412947832],[1.5,0.701533626649904,-1.16273412947832],[4.5,0.371533626649904,0.837265870521683],[3,-0.298466373350096,0.837265870521683],[4,-0.298466373350096,0.167265870521683],[3.5,-0.298466373350096,0.507265870521683],[3,-0.298466373350096,-0.162734129478317],[4.5,-0.968466373350096,-2.49273412947832],[1.5,-0.298466373350096,-2.16273412947832],[4.5,0.701533626649904,-0.162734129478317],[4.5,0.701533626649904,0.507265870521683],[4.5,0.701533626649904,0.837265870521683],[4,0.031533626649904,0.507265870521683],[4,0.031533626649904,-0.162734129478317],[3,-0.298466373350096,-0.162734129478317],[3,-0.628466373350096,-0.162734129478317],[3.5,0.371533626649904,0.837265870521683],[3.5,0.031533626649904,-0.162734129478317],[3.5,0.031533626649904,-0.832734129478317],[3.5,-0.298466373350096,0.507265870521683],[4,-0.298466373350096,-0.162734129478317],[5,0.371533626649904,0.837265870521683],[4.5,0.031533626649904,0.837265870521683],[4,-0.298466373350096,-0.162734129478317],[2.5,0.701533626649904,-0.162734129478317],[3,-0.298466373350096,-0.162734129478317],[4,-0.628466373350096,-0.492734129478317],[3,0.371533626649904,-1.49273412947832],[3.5,-0.628466373350096,0.837265870521683],[2,-0.968466373350096,-0.162734129478317],[3.5,-0.968466373350096,-0.162734129478317],[3,-0.628466373350096,-0.162734129478317],[4,0.031533626649904,0.837265870521683],[3.5,-0.968466373350096,-0.162734129478317],[4.5,0.371533626649904,0.507265870521683],[3.5,-0.298466373350096,-0.162734129478317],[3.5,0.701533626649904,-0.832734129478317],[3.5,-0.298466373350096,-0.492734129478317],[4.5,0.031533626649904,0.837265870521683],[5,0.031533626649904,0.167265870521683],[4,-0.298466373350096,0.167265870521683],[3,-0.628466373350096,0.837265870521683],[4,-0.298466373350096,0.507265870521683],[3.5,0.371533626649904,0.837265870521683],[4,-0.628466373350096,-0.162734129478317],[4.5,-0.298466373350096,-0.832734129478317],[4.5,0.031533626649904,0.837265870521683],[2,0.031533626649904,-0.832734129478317],[4.5,0.371533626649904,-0.832734129478317],[2,0.031533626649904,-0.832734129478317],[2,0.031533626649904,-2.83273412947832],[2.5,-1.6284663733501,-0.492734129478317],[4.5,0.371533626649904,0.507265870521683],[4.5,0.701533626649904,-1.16273412947832],[5,0.701533626649904,0.837265870521683],[4,0.371533626649904,0.507265870521683],[4.5,0.701533626649904,0.507265870521683],[1,-1.2984663733501,-0.492734129478317],[3,-0.628466373350096,0.507265870521683],[3.5,-0.628466373350096,-0.832734129478317],[4,-1.2984663733501,-0.162734129478317],[3,0.371533626649904,0.507265870521683],[3.5,0.371533626649904,0.837265870521683],[2.5,-0.968466373350096,0.167265870521683],[5,0.701533626649904,0.837265870521683],[4.5,0.701533626649904,0.507265870521683],[4.5,0.701533626649904,0.167265870521683],[1,-0.628466373350096,-0.832734129478317],[3.5,-0.298466373350096,-0.162734129478317],[3.5,0.701533626649904,0.507265870521683],[5,0.701533626649904,0.167265870521683],[1.5,-1.2984663733501,-1.49273412947832],[4.5,0.371533626649904,0.837265870521683],[5,0.031533626649904,0.507265870521683],[4.5,0.701533626649904,0.837265870521683],[4.5,0.701533626649904,0.837265870521683],[4,0.701533626649904,0.167265870521683],[2,-1.6284663733501,-0.832734129478317],[3,0.031533626649904,-0.162734129478317],[3.5,0.031533626649904,-1.49273412947832],[2,0.371533626649904,0.507265870521683],[2,-0.298466373350096,0.167265870521683],[3,0.031533626649904,-0.162734129478317],[2,-0.298466373350096,0.167265870521683],[4,0.701533626649904,0.837265870521683],[5,0.701533626649904,0.167265870521683],[1,-0.298466373350096,-2.83273412947832],[2.5,0.371533626649904,0.167265870521683],[4,0.031533626649904,0.167265870521683],[4.5,0.701533626649904,0.507265870521683],[3.5,0.371533626649904,0.167265870521683],[3,-0.298466373350096,0.837265870521683],[4,-0.298466373350096,-0.162734129478317],[2,-1.2984663733501,-1.83273412947832],[2,0.371533626649904,-0.832734129478317],[4,-0.298466373350096,0.507265870521683],[2.5,0.371533626649904,-0.832734129478317],[2.5,-0.298466373350096,-0.832734129478317],[4,0.701533626649904,0.837265870521683],[4,-0.968466373350096,-0.162734129478317],[3.5,0.701533626649904,-0.832734129478317],[3.5,0.701533626649904,-1.49273412947832],[3,-0.298466373350096,-0.492734129478317],[4,-0.298466373350096,-0.162734129478317],[4,-0.298466373350096,0.167265870521683],[2.5,0.701533626649904,0.837265870521683],[4,-0.298466373350096,-0.492734129478317],[2.5,-0.628466373350096,-1.16273412947832],[4,0.701533626649904,-0.162734129478317],[3.5,0.371533626649904,-0.162734129478317],[4,-0.298466373350096,0.167265870521683],[3.5,0.031533626649904,0.837265870521683],[5,-0.298466373350096,-0.162734129478317],[4.5,0.701533626649904,0.167265870521683],[4,0.371533626649904,0.167265870521683],[4,-0.298466373350096,0.167265870521683],[3,-0.968466373350096,0.837265870521683],[4.5,0.031533626649904,0.507265870521683],[3.5,-0.628466373350096,-0.492734129478317],[3.5,0.371533626649904,0.507265870521683],[4.5,0.031533626649904,0.837265870521683],[3.5,0.371533626649904,0.837265870521683],[4,-0.298466373350096,0.167265870521683],[1,0.701533626649904,-1.83273412947832],[4.5,-0.298466373350096,-0.162734129478317],[3.5,-0.628466373350096,-1.49273412947832],[4,0.701533626649904,0.837265870521683],[2.5,-0.298466373350096,0.837265870521683],[2,0.371533626649904,0.167265870521683],[2.5,0.701533626649904,-2.16273412947832],[4.5,0.701533626649904,0.507265870521683],[5,0.371533626649904,0.507265870521683],[3,-0.628466373350096,0.167265870521683],[2,-0.968466373350096,-0.492734129478317],[5,0.701533626649904,0.837265870521683],[4.5,0.701533626649904,0.167265870521683],[4.5,0.701533626649904,0.507265870521683],[2,-0.298466373350096,-0.492734129478317],[4,0.031533626649904,-0.492734129478317],[5,0.701533626649904,0.167265870521683],[4.5,0.031533626649904,-0.162734129478317],[5,0.031533626649904,0.167265870521683],[5,-0.298466373350096,0.167265870521683],[3.5,0.371533626649904,0.507265870521683],[3.5,0.701533626649904,0.167265870521683],[5,0.371533626649904,-0.162734129478317],[4.5,-0.298466373350096,-0.162734129478317],[4,-0.298466373350096,0.167265870521683],[4,0.371533626649904,0.167265870521683],[5,0.371533626649904,0.507265870521683],[4,-0.968466373350096,-0.162734129478317],[4.5,-0.298466373350096,0.507265870521683],[5,-0.298466373350096,0.507265870521683],[4,0.031533626649904,0.837265870521683],[3.5,-0.298466373350096,0.837265870521683],[4,-0.298466373350096,0.507265870521683],[1.5,0.031533626649904,0.837265870521683],[2,-0.298466373350096,-1.49273412947832],[4,-1.2984663733501,0.507265870521683],[3.5,0.701533626649904,-0.492734129478317],[3.5,-0.298466373350096,-0.832734129478317],[3,0.701533626649904,-0.162734129478317],[3.5,-0.968466373350096,0.167265870521683],[2,-0.968466373350096,0.167265870521683],[4.5,-0.968466373350096,0.507265870521683],[4,0.371533626649904,0.837265870521683],[3,0.031533626649904,0.507265870521683],[4,0.371533626649904,-0.162734129478317],[3.5,-0.298466373350096,-0.162734129478317],[3,-0.298466373350096,-1.83273412947832],[4.5,0.371533626649904,0.507265870521683],[3,0.031533626649904,-1.16273412947832],[4,-0.298466373350096,-2.16273412947832],[4,0.371533626649904,0.507265870521683],[4,0.701533626649904,-2.16273412947832],[3.5,0.371533626649904,-0.162734129478317],[3.5,-0.298466373350096,0.837265870521683],[2.5,-0.298466373350096,-1.16273412947832],[2,-1.2984663733501,-1.83273412947832],[2,-0.298466373350096,-0.162734129478317],[4,0.701533626649904,-0.832734129478317],[3.5,0.371533626649904,0.507265870521683],[3.5,0.371533626649904,0.837265870521683],[4.5,0.701533626649904,0.837265870521683],[3,-0.968466373350096,0.167265870521683],[4,-0.628466373350096,0.167265870521683],[3.5,-0.298466373350096,0.167265870521683],[4,-0.298466373350096,-0.832734129478317],[4,0.031533626649904,-0.162734129478317],[3,-1.9684663733501,-0.492734129478317],[5,0.701533626649904,0.837265870521683],[4,0.031533626649904,-0.162734129478317],[2,0.701533626649904,0.837265870521683],[4,0.371533626649904,0.837265870521683],[4,0.371533626649904,0.837265870521683],[4,-0.298466373350096,0.837265870521683],[2,-0.968466373350096,-2.16273412947832],[2,-0.628466373350096,-2.16273412947832],[4.5,0.031533626649904,0.837265870521683],[2,-0.298466373350096,0.507265870521683],[1.5,-1.6284663733501,-1.49273412947832],[3.5,-0.298466373350096,-2.49273412947832],[2.5,-0.298466373350096,0.167265870521683],[3,-0.968466373350096,-1.83273412947832],[1.5,0.371533626649904,0.837265870521683],[2,-0.298466373350096,-2.16273412947832],[3.5,-0.298466373350096,0.507265870521683],[2.5,-0.298466373350096,0.837265870521683],[3,0.031533626649904,0.507265870521683],[3,0.031533626649904,0.167265870521683],[4,-0.298466373350096,0.167265870521683],[1,0.701533626649904,0.837265870521683],[4,0.371533626649904,0.167265870521683],[4.5,0.701533626649904,-0.492734129478317],[3.5,0.371533626649904,-0.162734129478317],[4,0.371533626649904,0.507265870521683],[1,-1.6284663733501,-2.49273412947832],[3.5,-0.298466373350096,0.507265870521683],[3,-0.298466373350096,0.837265870521683],[4,0.031533626649904,0.507265870521683],[3.5,0.371533626649904,0.837265870521683],[4,0.701533626649904,0.507265870521683],[3,-1.2984663733501,-1.16273412947832],[3,0.701533626649904,-0.492734129478317],[4.5,0.371533626649904,0.837265870521683],[3.5,0.031533626649904,0.167265870521683],[2.5,0.371533626649904,0.507265870521683],[2,0.371533626649904,-1.83273412947832],[3.5,0.371533626649904,0.837265870521683],[3,0.031533626649904,-0.162734129478317],[2,-1.2984663733501,-0.162734129478317],[3.5,-0.298466373350096,0.507265870521683],[2.5,0.701533626649904,0.167265870521683],[4,-0.628466373350096,-0.162734129478317],[4,0.371533626649904,-0.162734129478317],[3,0.371533626649904,-0.162734129478317],[4.5,0.371533626649904,-1.16273412947832],[2,0.371533626649904,-0.162734129478317],[3.5,-0.628466373350096,-0.162734129478317],[1,-1.2984663733501,-2.16273412947832],[4,0.031533626649904,0.837265870521683],[4.5,0.701533626649904,0.167265870521683],[3,-0.298466373350096,0.167265870521683],[3,-0.298466373350096,0.837265870521683],[4,-0.298466373350096,0.507265870521683],[4,0.701533626649904,0.837265870521683],[2,-0.298466373350096,0.167265870521683],[2,-0.628466373350096,-0.162734129478317],[1,-1.6284663733501,-3.16273412947832],[1,-1.9684663733501,0.837265870521683],[3,-0.968466373350096,-2.16273412947832],[2.5,0.701533626649904,0.837265870521683],[3.5,0.371533626649904,0.507265870521683],[3.5,-0.298466373350096,-0.162734129478317],[3.5,-0.298466373350096,-0.162734129478317],[3.5,-0.298466373350096,-0.162734129478317],[3,-0.968466373350096,-0.162734129478317],[3.5,-0.298466373350096,-0.162734129478317],[3.5,0.371533626649904,0.167265870521683],[3,0.371533626649904,0.837265870521683],[2.5,0.031533626649904,-0.162734129478317],[4,-0.298466373350096,-1.49273412947832],[4.5,0.701533626649904,0.837265870521683],[4.5,0.701533626649904,0.837265870521683],[1,0.031533626649904,0.837265870521683],[3.5,0.031533626649904,-2.49273412947832],[3,0.701533626649904,0.837265870521683],[2,0.031533626649904,-0.162734129478317],[2,-0.628466373350096,-1.49273412947832],[2.5,0.371533626649904,-0.162734129478317],[4,0.031533626649904,-0.162734129478317],[4,0.371533626649904,0.167265870521683],[1,0.371533626649904,-2.49273412947832],[3.5,-0.298466373350096,0.167265870521683],[4.5,-0.298466373350096,0.507265870521683],[3,-0.298466373350096,0.167265870521683],[3.5,-0.298466373350096,-0.832734129478317],[4,0.031533626649904,-0.162734129478317],[1.5,-0.968466373350096,-1.16273412947832],[4,0.701533626649904,0.837265870521683],[3.5,-0.298466373350096,-0.162734129478317],[1.5,0.031533626649904,-1.83273412947832],[3,-0.628466373350096,-0.492734129478317],[2,0.031533626649904,-0.162734129478317],[4.5,0.371533626649904,0.837265870521683],[4.5,0.701533626649904,0.507265870521683],[3.5,-0.298466373350096,-0.832734129478317],[2,-0.628466373350096,-0.832734129478317],[4.5,-0.298466373350096,0.167265870521683],[1,-0.968466373350096,-1.83273412947832],[3,0.031533626649904,-1.83273412947832],[2,-0.298466373350096,0.507265870521683],[4.5,0.031533626649904,0.167265870521683],[4,0.031533626649904,0.167265870521683],[3.5,0.701533626649904,0.837265870521683],[3,0.031533626649904,-0.162734129478317],[3,0.031533626649904,0.837265870521683],[1,-2.9684663733501,-2.83273412947832],[3.5,0.031533626649904,0.167265870521683],[5,0.701533626649904,0.837265870521683],[4,-0.298466373350096,-1.83273412947832],[4.5,0.371533626649904,0.507265870521683],[4.5,0.371533626649904,-1.16273412947832],[3.5,0.031533626649904,0.507265870521683],[2.5,-0.298466373350096,-1.49273412947832],[3.5,0.701533626649904,-1.16273412947832],[4.5,0.371533626649904,-1.16273412947832],[2.5,-0.628466373350096,-0.162734129478317],[4.5,0.371533626649904,0.837265870521683],[4.5,0.701533626649904,0.837265870521683],[4.5,-0.298466373350096,0.837265870521683],[1.5,-0.968466373350096,0.167265870521683],[3.5,-0.298466373350096,0.837265870521683],[4,-0.298466373350096,0.837265870521683],[1.5,-1.9684663733501,-1.16273412947832],[3.5,-0.298466373350096,-0.162734129478317],[3.5,-1.2984663733501,-0.162734129478317],[4,-0.298466373350096,0.507265870521683],[4,0.371533626649904,-0.162734129478317],[4,-0.968466373350096,0.837265870521683],[3.5,-0.298466373350096,-0.162734129478317],[3.5,0.031533626649904,0.507265870521683],[4.5,0.371533626649904,0.837265870521683],[2.5,-0.298466373350096,-0.832734129478317],[4,-0.298466373350096,-1.49273412947832],[5,-0.968466373350096,0.167265870521683],[1,-0.298466373350096,-2.16273412947832],[4.5,0.701533626649904,0.167265870521683],[5,-0.628466373350096,-3.16273412947832],[4.5,0.031533626649904,0.837265870521683],[1,0.031533626649904,-1.83273412947832],[3.5,-0.298466373350096,-0.162734129478317],[3,0.371533626649904,-0.832734129478317],[5,-0.298466373350096,-0.162734129478317],[4,-0.628466373350096,-0.492734129478317],[5,0.701533626649904,-0.162734129478317],[2.5,0.031533626649904,0.507265870521683],[4.5,0.701533626649904,0.507265870521683],[2.5,-0.968466373350096,-1.83273412947832],[3.5,0.701533626649904,0.167265870521683],[3,0.701533626649904,0.837265870521683],[2,-1.9684663733501,-0.492734129478317],[3,0.371533626649904,-2.49273412947832],[4.5,0.031533626649904,0.167265870521683],[4,-0.298466373350096,0.507265870521683],[3.5,0.701533626649904,0.837265870521683],[2,-0.968466373350096,0.167265870521683],[3.5,-1.2984663733501,0.507265870521683],[4.5,0.701533626649904,0.507265870521683],[5,0.701533626649904,0.837265870521683],[2.5,-0.968466373350096,0.167265870521683],[3.5,0.701533626649904,-0.832734129478317],[5,0.701533626649904,0.507265870521683],[3.5,0.371533626649904,-1.16273412947832],[3.5,0.031533626649904,0.837265870521683],[3,-0.628466373350096,-0.162734129478317],[3,0.031533626649904,-0.162734129478317],[2.5,0.031533626649904,0.167265870521683],[1.5,-0.298466373350096,-2.83273412947832],[3.5,-0.298466373350096,0.507265870521683],[3.5,0.031533626649904,-0.162734129478317],[4,0.031533626649904,0.837265870521683],[4,0.371533626649904,0.837265870521683],[3,-0.298466373350096,-0.162734129478317],[3,0.371533626649904,-0.162734129478317],[4,0.371533626649904,0.507265870521683],[3,0.031533626649904,-0.162734129478317],[2,0.031533626649904,-0.162734129478317],[4,0.371533626649904,0.507265870521683],[4.5,-0.298466373350096,-0.492734129478317],[3.5,0.031533626649904,0.507265870521683],[5,0.701533626649904,0.507265870521683],[5,0.701533626649904,0.837265870521683],[3,0.701533626649904,-1.16273412947832],[4,-0.298466373350096,-0.832734129478317],[2.5,-0.628466373350096,-1.83273412947832],[3.5,-0.298466373350096,0.507265870521683],[4,0.371533626649904,0.837265870521683],[4,0.371533626649904,-0.162734129478317],[4.5,0.701533626649904,0.507265870521683],[5,0.371533626649904,-0.492734129478317],[2.5,-1.6284663733501,-0.162734129478317],[3.5,0.031533626649904,0.507265870521683],[4.5,-0.298466373350096,-0.832734129478317],[2.5,0.031533626649904,0.837265870521683],[2.5,0.031533626649904,0.837265870521683],[1,-3.2984663733501,-3.16273412947832],[3.5,0.031533626649904,-0.162734129478317],[2,-1.2984663733501,-0.492734129478317],[1.5,0.031533626649904,0.507265870521683],[3.5,-0.298466373350096,-0.162734129478317],[5,0.701533626649904,0.837265870521683],[2.5,-0.298466373350096,0.167265870521683],[2,-0.968466373350096,0.167265870521683],[4.5,0.371533626649904,0.507265870521683],[3,-2.6284663733501,0.837265870521683],[3.5,0.371533626649904,0.167265870521683],[3,0.701533626649904,0.507265870521683],[4,0.371533626649904,0.167265870521683],[5,0.031533626649904,0.837265870521683],[4.5,0.371533626649904,-0.492734129478317],[5,0.371533626649904,-0.162734129478317],[3.5,-0.628466373350096,-0.162734129478317],[4.5,-0.628466373350096,-0.162734129478317],[1.5,-0.968466373350096,0.507265870521683],[4,0.371533626649904,0.167265870521683],[3,0.031533626649904,0.837265870521683],[4,-0.968466373350096,0.167265870521683],[1.5,0.031533626649904,-1.83273412947832],[5,0.701533626649904,0.837265870521683],[3.5,-0.628466373350096,0.167265870521683],[4.5,0.371533626649904,0.167265870521683],[4.5,0.371533626649904,-2.16273412947832],[3.5,0.701533626649904,-0.492734129478317],[3,-0.298466373350096,-1.16273412947832],[3.5,-0.628466373350096,-0.832734129478317],[1,0.701533626649904,-3.16273412947832],[3.5,0.371533626649904,0.837265870521683],[3.5,-0.298466373350096,0.167265870521683],[5,0.701533626649904,0.837265870521683],[3.5,0.031533626649904,0.167265870521683],[4,-0.298466373350096,0.837265870521683],[3.5,0.031533626649904,0.167265870521683],[4,0.701533626649904,0.837265870521683],[3,-0.298466373350096,-1.49273412947832],[4.5,0.371533626649904,0.507265870521683],[4.5,0.701533626649904,0.167265870521683],[4.5,-0.968466373350096,-0.492734129478317],[5,0.701533626649904,0.837265870521683],[4.5,0.031533626649904,0.837265870521683],[4,0.031533626649904,0.507265870521683],[3.5,-1.2984663733501,-1.49273412947832],[3.5,-0.298466373350096,0.837265870521683],[3.5,0.031533626649904,0.837265870521683],[4,0.701533626649904,0.837265870521683],[5,0.701533626649904,0.837265870521683],[5,0.371533626649904,0.837265870521683],[4.5,0.701533626649904,0.167265870521683],[1,-0.968466373350096,-2.49273412947832],[4,-0.298466373350096,-0.492734129478317],[3,0.371533626649904,0.507265870521683],[3.5,-0.298466373350096,0.507265870521683],[4.5,0.371533626649904,0.837265870521683],[3.5,0.371533626649904,-0.162734129478317],[3.5,-0.628466373350096,0.167265870521683],[5,0.371533626649904,0.837265870521683],[5,0.371533626649904,0.837265870521683],[3.5,-0.298466373350096,0.837265870521683],[3.5,0.701533626649904,-0.162734129478317],[4,0.701533626649904,0.837265870521683],[1.5,-0.968466373350096,0.167265870521683],[4,0.701533626649904,0.167265870521683],[3.5,0.031533626649904,0.837265870521683],[4,0.031533626649904,-0.162734129478317],[3.5,-0.298466373350096,0.167265870521683],[3.5,0.031533626649904,0.167265870521683],[1,-0.628466373350096,-0.832734129478317],[3.5,0.371533626649904,0.837265870521683],[3,0.031533626649904,-0.162734129478317],[4,-0.298466373350096,0.837265870521683],[4,0.701533626649904,0.507265870521683],[5,0.701533626649904,0.837265870521683],[3,0.701533626649904,-1.49273412947832],[4,-0.298466373350096,0.507265870521683],[3.5,-0.298466373350096,0.507265870521683],[4.5,0.701533626649904,0.837265870521683],[4.5,0.031533626649904,0.837265870521683],[4,-0.628466373350096,0.507265870521683],[3,-0.968466373350096,-0.492734129478317],[2,0.701533626649904,-2.83273412947832],[4,0.701533626649904,0.167265870521683],[3,0.371533626649904,0.837265870521683],[4,0.701533626649904,-0.492734129478317],[4,0.031533626649904,0.837265870521683],[4.5,0.701533626649904,0.167265870521683],[2.5,-0.968466373350096,0.507265870521683],[3,-0.628466373350096,-0.162734129478317],[4,0.031533626649904,-2.16273412947832],[4,0.701533626649904,0.837265870521683],[3,0.701533626649904,0.837265870521683],[4,-0.968466373350096,-0.162734129478317],[2.5,-0.628466373350096,-1.83273412947832],[4,0.031533626649904,0.507265870521683],[4,-0.298466373350096,-0.162734129478317],[3.5,0.371533626649904,-0.832734129478317],[3.5,0.701533626649904,0.507265870521683],[2,0.031533626649904,-0.162734129478317],[4,-1.2984663733501,-0.162734129478317],[3.5,0.701533626649904,0.837265870521683],[2.5,0.701533626649904,-0.162734129478317],[4,0.031533626649904,-0.162734129478317],[4.5,0.701533626649904,0.167265870521683],[3,-0.628466373350096,0.507265870521683],[5,0.701533626649904,0.837265870521683],[4.5,0.701533626649904,0.837265870521683],[3,-0.628466373350096,0.837265870521683],[4,0.371533626649904,-0.162734129478317],[3.5,0.371533626649904,-0.162734129478317],[5,0.701533626649904,0.837265870521683],[3.5,0.031533626649904,0.507265870521683],[3.5,-0.298466373350096,0.507265870521683],[4.5,-0.298466373350096,0.167265870521683],[4,0.371533626649904,0.507265870521683],[3.5,0.371533626649904,-0.162734129478317],[4,0.701533626649904,-0.832734129478317],[4.5,0.701533626649904,0.837265870521683],[5,0.701533626649904,0.837265870521683],[4.5,0.701533626649904,0.837265870521683],[4,0.701533626649904,0.837265870521683],[2.5,0.031533626649904,0.507265870521683],[5,0.701533626649904,-1.49273412947832],[4.5,-0.298466373350096,-0.162734129478317],[3.5,-0.298466373350096,0.167265870521683],[3,-0.298466373350096,-2.16273412947832],[5,0.031533626649904,0.507265870521683],[1,-1.9684663733501,-0.162734129478317],[3.5,-0.298466373350096,0.167265870521683],[4.5,0.701533626649904,0.837265870521683],[3,0.031533626649904,0.507265870521683],[3.5,0.031533626649904,0.167265870521683],[2.5,-0.298466373350096,-0.492734129478317],[4.5,0.371533626649904,-0.832734129478317],[5,-1.6284663733501,0.837265870521683],[3.5,0.701533626649904,0.837265870521683],[3.5,0.701533626649904,0.837265870521683],[3,-0.298466373350096,-0.162734129478317],[3.5,-0.298466373350096,0.837265870521683],[1.5,-0.298466373350096,-1.16273412947832],[1.5,0.371533626649904,-0.492734129478317],[2,0.371533626649904,-0.492734129478317],[3,-0.298466373350096,0.507265870521683],[2.5,-1.6284663733501,-1.49273412947832],[2.5,-0.298466373350096,-0.162734129478317],[2,0.031533626649904,-0.162734129478317],[4,-0.298466373350096,-0.492734129478317],[4.5,0.371533626649904,0.837265870521683],[4,-1.2984663733501,0.507265870521683],[5,0.371533626649904,0.507265870521683],[4.5,-0.628466373350096,0.837265870521683],[3.5,0.371533626649904,0.507265870521683],[4.5,0.701533626649904,0.167265870521683],[3.5,0.701533626649904,0.507265870521683],[5,0.371533626649904,0.837265870521683],[5,-0.298466373350096,0.507265870521683],[4,0.701533626649904,0.507265870521683],[3,0.701533626649904,-1.83273412947832],[3,-0.298466373350096,-0.162734129478317],[4.5,-1.2984663733501,-0.162734129478317],[1.5,-0.298466373350096,0.167265870521683],[3.5,0.701533626649904,-0.162734129478317],[2,0.371533626649904,0.837265870521683],[5,0.701533626649904,-0.162734129478317],[4,0.701533626649904,-2.16273412947832],[2.5,-0.298466373350096,-0.162734129478317],[2.5,-0.298466373350096,-0.162734129478317],[2,0.371533626649904,-0.162734129478317],[3.5,0.031533626649904,0.167265870521683],[3,-0.628466373350096,-0.492734129478317],[3.5,-0.298466373350096,-0.162734129478317],[2.5,-1.6284663733501,-1.83273412947832],[3,-0.298466373350096,-1.16273412947832],[3,-0.628466373350096,-0.162734129478317],[3.5,0.371533626649904,-0.162734129478317],[3.5,0.371533626649904,0.167265870521683],[4.5,0.371533626649904,-1.83273412947832],[3.5,0.701533626649904,0.837265870521683],[4,0.701533626649904,0.507265870521683],[3.5,-0.628466373350096,-1.49273412947832],[4.5,0.701533626649904,0.837265870521683],[4.5,0.701533626649904,0.837265870521683],[3,-1.2984663733501,0.837265870521683],[4,0.701533626649904,0.837265870521683],[3,0.701533626649904,0.837265870521683],[1.5,0.031533626649904,0.507265870521683],[4,0.031533626649904,0.837265870521683],[2.5,0.031533626649904,0.507265870521683],[3,-1.2984663733501,-0.832734129478317],[4.5,0.701533626649904,0.837265870521683],[3.5,0.701533626649904,0.167265870521683],[3.5,-0.628466373350096,0.507265870521683],[5,0.701533626649904,0.837265870521683],[4,0.701533626649904,0.837265870521683],[5,0.701533626649904,0.837265870521683],[5,0.701533626649904,0.837265870521683],[3.5,-0.628466373350096,0.167265870521683],[3.5,-0.298466373350096,0.507265870521683],[3.5,0.371533626649904,-0.162734129478317],[3.5,0.371533626649904,0.507265870521683],[3,0.701533626649904,-0.832734129478317],[5,0.701533626649904,0.837265870521683],[1,-1.2984663733501,0.837265870521683],[4.5,0.701533626649904,-2.16273412947832],[2,0.031533626649904,0.167265870521683],[4,0.031533626649904,0.507265870521683],[3,-0.298466373350096,-0.492734129478317],[3.5,-0.298466373350096,0.167265870521683],[3,-0.298466373350096,0.837265870521683],[1,-1.2984663733501,0.837265870521683],[4,-0.298466373350096,0.837265870521683],[4,-0.298466373350096,0.837265870521683],[3.5,0.031533626649904,0.507265870521683],[5,0.701533626649904,0.837265870521683],[1,-1.2984663733501,0.507265870521683],[5,0.701533626649904,0.167265870521683],[3.5,0.031533626649904,-0.162734129478317],[4,-0.298466373350096,-2.49273412947832],[3.5,0.031533626649904,-0.492734129478317],[3,-0.298466373350096,0.837265870521683],[4,0.701533626649904,0.167265870521683],[3.5,-0.298466373350096,-0.832734129478317],[3,0.701533626649904,0.167265870521683],[4.5,-0.628466373350096,-0.492734129478317],[4,-0.298466373350096,0.837265870521683],[3.5,0.701533626649904,0.507265870521683],[3,0.031533626649904,-2.49273412947832],[4,0.371533626649904,0.507265870521683],[5,0.701533626649904,-0.162734129478317],[4,0.031533626649904,0.167265870521683],[5,0.701533626649904,0.167265870521683],[5,0.701533626649904,0.837265870521683],[3,0.371533626649904,-0.162734129478317],[4.5,0.701533626649904,0.167265870521683],[3,0.701533626649904,-1.83273412947832],[3.5,-0.298466373350096,-0.492734129478317],[4,0.371533626649904,0.507265870521683],[4.5,-0.298466373350096,0.167265870521683],[4,-0.298466373350096,-0.492734129478317],[4,0.031533626649904,0.837265870521683],[5,0.701533626649904,0.507265870521683],[3.5,0.701533626649904,0.507265870521683],[4.5,0.371533626649904,0.507265870521683],[3,-1.2984663733501,-1.49273412947832],[2.5,-0.298466373350096,-0.832734129478317],[4,-0.298466373350096,0.837265870521683],[3.5,0.031533626649904,0.507265870521683],[4,-0.628466373350096,-0.492734129478317],[4.5,0.701533626649904,-0.162734129478317],[5,0.371533626649904,-1.49273412947832],[2,0.031533626649904,0.837265870521683],[3,0.031533626649904,0.837265870521683],[3,0.371533626649904,-1.16273412947832],[1,-3.2984663733501,-3.16273412947832],[4.5,0.031533626649904,0.167265870521683],[4,0.031533626649904,-0.832734129478317],[4.5,0.031533626649904,0.167265870521683],[2.5,0.371533626649904,-0.492734129478317],[3.5,0.031533626649904,-0.492734129478317],[4,0.701533626649904,-0.162734129478317],[1.5,0.371533626649904,0.507265870521683],[4.5,0.031533626649904,-0.162734129478317],[4.5,0.371533626649904,0.837265870521683],[3.5,-0.298466373350096,0.167265870521683],[5,0.701533626649904,0.837265870521683],[3.5,0.701533626649904,0.167265870521683],[4.5,0.701533626649904,0.507265870521683],[4.5,0.371533626649904,-0.832734129478317],[3.5,0.371533626649904,0.837265870521683],[4.5,0.371533626649904,-0.162734129478317],[4,0.371533626649904,0.167265870521683],[4,0.701533626649904,0.837265870521683],[3.5,0.031533626649904,0.837265870521683],[3,-0.298466373350096,0.507265870521683],[4,-0.298466373350096,0.167265870521683],[4,0.031533626649904,-0.492734129478317],[3,0.701533626649904,-0.492734129478317],[4.5,0.701533626649904,0.837265870521683],[4.5,0.701533626649904,0.837265870521683],[2,0.371533626649904,-0.492734129478317],[4,0.701533626649904,-0.162734129478317],[5,0.701533626649904,-3.16273412947832],[3,0.701533626649904,0.837265870521683],[3.5,-0.298466373350096,-0.832734129478317],[4.5,0.701533626649904,0.837265870521683],[4,0.371533626649904,0.837265870521683],[3,-0.628466373350096,0.837265870521683],[4.5,0.701533626649904,-0.492734129478317],[3.5,0.371533626649904,0.167265870521683],[4.5,-0.298466373350096,0.507265870521683],[4,-2.2984663733501,-1.83273412947832],[5,0.701533626649904,0.167265870521683],[3,-1.9684663733501,-2.16273412947832],[1,0.371533626649904,0.507265870521683],[2,-2.2984663733501,-1.49273412947832],[5,0.701533626649904,-0.162734129478317],[2.5,-0.628466373350096,-2.16273412947832],[4,-0.298466373350096,-0.162734129478317],[3,-0.298466373350096,0.837265870521683],[4.5,0.371533626649904,0.167265870521683],[3.5,0.371533626649904,-0.832734129478317],[2.5,0.371533626649904,-0.162734129478317],[2.5,-0.628466373350096,-1.16273412947832],[3.5,0.371533626649904,-2.83273412947832],[5.5,-2.2984663733501,-1.16273412947832],[4,-0.298466373350096,0.167265870521683],[2.5,0.701533626649904,0.837265870521683],[4,0.701533626649904,0.837265870521683],[2,0.701533626649904,-0.492734129478317],[3.5,0.371533626649904,-0.162734129478317],[3,0.031533626649904,0.507265870521683],[1,-0.628466373350096,-0.162734129478317],[5,-0.628466373350096,-0.492734129478317],[4,0.701533626649904,0.837265870521683],[4.5,0.701533626649904,-0.492734129478317],[4.5,-0.298466373350096,0.167265870521683],[2,-0.628466373350096,-0.162734129478317],[4,0.701533626649904,0.507265870521683],[2,0.701533626649904,-3.16273412947832],[4.5,0.031533626649904,0.837265870521683],[2,0.031533626649904,-0.162734129478317],[3,0.371533626649904,0.837265870521683],[4.5,0.031533626649904,0.507265870521683],[3,-1.6284663733501,-0.162734129478317],[4.5,0.031533626649904,0.167265870521683],[3.5,0.031533626649904,0.837265870521683],[4.5,0.701533626649904,0.507265870521683],[2.5,0.701533626649904,-0.832734129478317],[3.5,0.031533626649904,0.837265870521683],[3,0.701533626649904,-0.492734129478317],[4,-0.298466373350096,-1.83273412947832],[4,0.701533626649904,0.507265870521683],[4,0.031533626649904,-0.162734129478317],[4.5,0.701533626649904,0.837265870521683],[5,0.701533626649904,0.837265870521683],[5,0.701533626649904,0.837265870521683],[4.5,-0.298466373350096,0.167265870521683],[4,-0.628466373350096,-0.832734129478317],[4.5,-0.298466373350096,0.167265870521683],[3.5,0.701533626649904,-0.492734129478317],[5,0.701533626649904,0.837265870521683],[3,-0.968466373350096,-0.162734129478317],[3.5,0.371533626649904,0.167265870521683],[4,-0.298466373350096,0.167265870521683],[5,0.701533626649904,0.837265870521683],[3,-0.298466373350096,-2.16273412947832],[4.5,0.701533626649904,0.507265870521683],[3.5,0.701533626649904,0.507265870521683],[3.5,0.701533626649904,-0.832734129478317],[3.5,0.701533626649904,0.837265870521683],[4,0.371533626649904,0.837265870521683],[1.5,0.031533626649904,-2.49273412947832],[5,0.701533626649904,0.507265870521683],[5,0.701533626649904,0.837265870521683],[4,0.701533626649904,0.167265870521683],[4.5,0.701533626649904,0.167265870521683],[3.5,0.031533626649904,-0.492734129478317],[3.5,-0.628466373350096,-0.162734129478317],[4,-0.298466373350096,0.167265870521683],[4,0.031533626649904,0.507265870521683],[3.5,-0.298466373350096,0.837265870521683],[3.5,0.031533626649904,0.167265870521683],[2,0.031533626649904,-0.832734129478317],[2,-0.298466373350096,-0.492734129478317],[2,0.371533626649904,-0.832734129478317],[4,0.701533626649904,0.837265870521683],[4.5,0.371533626649904,0.507265870521683],[2.5,0.031533626649904,0.507265870521683],[4,-0.298466373350096,-0.492734129478317],[3.5,-0.298466373350096,-0.492734129478317],[3,0.371533626649904,-1.16273412947832],[3,0.371533626649904,-0.162734129478317],[1,-1.2984663733501,-1.83273412947832],[3.5,0.371533626649904,0.167265870521683],[4,-0.298466373350096,0.167265870521683],[5,0.701533626649904,0.507265870521683],[3.5,0.701533626649904,0.837265870521683],[4,0.701533626649904,0.837265870521683],[3.5,0.701533626649904,0.837265870521683],[2.5,0.031533626649904,0.507265870521683],[4.5,0.701533626649904,-0.162734129478317],[1,-0.298466373350096,0.837265870521683],[4.5,0.701533626649904,0.837265870521683],[1,-0.298466373350096,0.837265870521683],[3,-0.298466373350096,-0.832734129478317],[3.5,0.371533626649904,0.837265870521683],[3,0.701533626649904,0.167265870521683],[4,0.031533626649904,-0.162734129478317],[3,-0.298466373350096,0.837265870521683],[2.5,0.371533626649904,-0.492734129478317],[4,0.031533626649904,0.837265870521683],[3.5,0.031533626649904,0.837265870521683],[4,-1.2984663733501,-0.162734129478317],[3.5,0.031533626649904,-0.492734129478317],[1,-0.298466373350096,0.837265870521683],[3,-0.298466373350096,-0.162734129478317],[4,0.031533626649904,0.837265870521683],[4,0.031533626649904,0.507265870521683],[3.5,0.031533626649904,-0.162734129478317],[4.5,0.031533626649904,0.837265870521683],[5,-0.298466373350096,0.837265870521683],[2.5,-2.2984663733501,-1.83273412947832],[2.5,-0.298466373350096,0.167265870521683],[1.5,0.371533626649904,0.837265870521683],[4,0.371533626649904,0.167265870521683],[3,-0.968466373350096,-1.16273412947832],[3,0.031533626649904,0.167265870521683],[4.5,0.371533626649904,0.507265870521683],[3.5,0.371533626649904,-0.162734129478317],[4,0.701533626649904,0.507265870521683],[4,0.031533626649904,0.837265870521683],[3,-0.628466373350096,-0.492734129478317],[3,0.371533626649904,-1.83273412947832],[3.5,0.371533626649904,-0.492734129478317],[4,0.701533626649904,0.507265870521683],[1,-0.628466373350096,-1.49273412947832],[4,-0.628466373350096,0.507265870521683],[3,-1.9684663733501,-0.832734129478317],[3.5,0.701533626649904,-0.162734129478317],[3,-1.6284663733501,0.507265870521683],[4.5,0.701533626649904,0.507265870521683],[4,0.701533626649904,-0.492734129478317],[3.5,-0.968466373350096,-0.832734129478317],[3,0.031533626649904,-2.49273412947832],[5,0.031533626649904,-0.492734129478317],[3.5,0.031533626649904,-0.162734129478317],[4,-0.298466373350096,-0.162734129478317],[3.5,-1.6284663733501,-1.16273412947832],[4,0.031533626649904,0.837265870521683],[4.5,0.371533626649904,0.837265870521683],[4,0.371533626649904,0.837265870521683],[3.5,0.701533626649904,-0.162734129478317],[2.5,0.701533626649904,0.507265870521683],[5,0.701533626649904,0.837265870521683],[3.5,-0.628466373350096,-0.162734129478317],[3.5,-0.298466373350096,0.167265870521683],[3,0.701533626649904,0.837265870521683],[3,-0.298466373350096,-0.162734129478317],[2,-0.628466373350096,-0.162734129478317],[4.5,0.371533626649904,0.837265870521683],[3,0.701533626649904,0.837265870521683],[2,-0.968466373350096,-0.492734129478317],[4,0.371533626649904,0.507265870521683],[3,-0.628466373350096,0.507265870521683],[2.5,0.701533626649904,0.837265870521683],[1,-0.298466373350096,-2.83273412947832],[3.5,0.031533626649904,0.837265870521683],[3,0.031533626649904,-0.492734129478317],[4.5,0.701533626649904,0.837265870521683],[4,0.031533626649904,-0.492734129478317],[4.5,0.701533626649904,-2.49273412947832],[3.5,-0.298466373350096,-0.492734129478317],[5,0.701533626649904,0.167265870521683],[3.5,-0.298466373350096,0.167265870521683],[4,-2.6284663733501,-0.162734129478317],[4.5,-0.298466373350096,0.167265870521683]]}","/*\r\nFunctions to resize the canvas and the viewport.\r\n*/\r\n\r\n/**\r\n * {object} gl - WebGL context.\r\n * {number} _resolution - Resolution in CSS pixels. If omitted, the real resolution\r\n * of the device is taken. On smartphones, for instance, the resolution is often greater than 1.\r\n *\r\n * return {boolean} `true` if the size has changed.\r\n */\r\nmodule.exports = function ( gl, _resolution ) {\r\n    const\r\n        resolution = typeof _resolution !== \"undefined\" ? _resolution : window.devicePixelRatio,\r\n        displayWidth = Math.floor( gl.canvas.clientWidth * resolution ),\r\n        displayHeight = Math.floor( gl.canvas.clientHeight * resolution );\r\n\r\n    // Check if the canvas is not the same size.\r\n    if ( gl.canvas.width !== displayWidth ||\r\n        gl.canvas.height !== displayHeight ) {\r\n\r\n        // Make the canvas the same size\r\n        gl.canvas.width = displayWidth;\r\n        gl.canvas.height = displayHeight;\r\n        gl.viewport( 0, 0, displayWidth, displayHeight );\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/point.2defcad4.vert\";","module.exports = __webpack_public_path__ + \"static/media/point.1b1624df.frag\";","module.exports = __webpack_public_path__ + \"static/media/axis.17a5fbce.vert\";","module.exports = __webpack_public_path__ + \"static/media/axis.de3b1487.frag\";","export const M4 = {\r\n    identity: identity4,\r\n    matrix: mat4,\r\n    vector: vec4,\r\n    projection: projection4,\r\n    translation: translation4,\r\n    rotationX: rotationX4,\r\n    rotationY: rotationY4,\r\n    rotationZ: rotationZ4,\r\n    rotationXY: rotationXY4,\r\n    rotationYX: rotationYX4,\r\n    rotationXZ: rotationXZ4,\r\n    rotationZX: rotationZX4,\r\n    scaling: scaling4,\r\n    copy: copy,\r\n    normalize: normalize,\r\n    cameraPolar: cameraPolar4,\r\n    perspective: perspective4,\r\n    mul: mul\r\n}\r\nexport const M3 = {\r\n    identity: identity3,\r\n    matrix: mat3,\r\n    projection: projection3,\r\n    translation: translation3,\r\n    rotation: rotation3,\r\n    scaling: scaling3\r\n}\r\n\r\nexport default { M3, M4, computeBinomialCoeffs }\r\n\r\nconst\r\n    M4_00 = 0,\r\n    M4_10 = 1,\r\n    M4_20 = 2,\r\n    M4_30 = 3,\r\n    M4_01 = 4,\r\n    M4_11 = 5,\r\n    M4_21 = 6,\r\n    M4_31 = 7,\r\n    M4_02 = 8,\r\n    M4_12 = 9,\r\n    M4_22 = 10,\r\n    M4_32 = 11,\r\n    M4_03 = 12,\r\n    M4_13 = 13,\r\n    M4_23 = 14,\r\n    M4_33 = 15;\r\n\r\n\r\nfunction copy(arr: Iterable<number>) {\r\n    return new Float32Array(arr);\r\n}\r\n\r\nfunction normalize(arr: Iterable<number>) {\r\n    const n = copy(arr);\r\n    let len = 0\r\n    for (let k = 0; k < n.length; k++) {\r\n        const v = n[k];\r\n        len += v * v;\r\n    }\r\n    if (len > 0) {\r\n        const coeff = 1 / Math.sqrt(len);\r\n        for (let k = 0; k < n.length; k++) {\r\n            n[k] *= coeff;\r\n        }\r\n    }\r\n    return n;\r\n}\r\n\r\n/**\r\n * Create the matrix of a camera pointing on (targetX,targetY,targetZ) which is\r\n * the center of a sphere of radius `dis`. The camera position is defined by its\r\n * latitude and longitude (expressed in radians) on this sphere.\r\n */\r\nfunction cameraPolar4(targetX: number, targetY: number, targetZ: number,\r\n    dis: number, lat: number, lng: number,\r\n    output: Float32Array | undefined = undefined): Float32Array\r\n    {\r\n    const result = output || new Float32Array(16);\r\n    const cosLat = Math.cos(lat);\r\n    const sinLat = Math.sin(lat);\r\n    const cosLng = -Math.cos(lng + Math.PI * .5);\r\n    const sinLng = -Math.sin(lng + Math.PI * .5);\r\n    // Z vector of the camera.\r\n    const Zx = cosLng * cosLat;\r\n    const Zy = sinLng * cosLat;\r\n    const Zz = sinLat; // V2/2\r\n    // Le vecteur X se déduit par un produit vectoriel de (0,0,1) avec Z.\r\n    let Xx = -Zy;\r\n    let Xy = Zx;\r\n    let Xz = 0;\r\n    // Comme (0,0,1) n'est pas orthogonal à Z, il faut normaliser X.\r\n    const len = Math.sqrt(Xx * Xx + Xy * Xy + Xz * Xz);\r\n    Xx /= len;\r\n    Xy /= len;\r\n    Xz /= len;\r\n    // Y peut alors se déduire par le produit vectoriel de Z par X.\r\n    // Et il n'y aura pas besoin de le normaliser.\r\n    const Yx = Zy * Xz - Zz * Xy;\r\n    const Yy = Xx * Zz - Xz * Zx;\r\n    const Yz = Zx * Xy - Zy * Xx;\r\n    // Translation.\r\n    const Tx = -(Zx * dis + targetX);\r\n    const Ty = -(Zy * dis + targetY);\r\n    const Tz = -(Zz * dis + targetZ);\r\n\r\n    // Le résultat est la multiplication de la projection avec la translation.\r\n    result[M4_00] = Xx;\r\n    result[M4_01] = Xy;\r\n    result[M4_02] = Xz;\r\n    result[M4_03] = Tx * Xx + Ty * Xy + Tz * Xz;\r\n\r\n    result[M4_10] = Yx;\r\n    result[M4_11] = Yy;\r\n    result[M4_12] = Yz;\r\n    result[M4_13] = Tx * Yx + Ty * Yy + Tz * Yz;\r\n\r\n    result[M4_20] = Zx;\r\n    result[M4_21] = Zy;\r\n    result[M4_22] = Zz;\r\n    result[M4_23] = Tx * Zx + Ty * Zy + Tz * Zz;\r\n\r\n    result[M4_30] = 0;\r\n    result[M4_31] = 0;\r\n    result[M4_32] = 0;\r\n    result[M4_33] = 1;\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * Define the `frustum`.\r\n * - param fieldAngle: View angle in radians. Maximum is PI.\r\n * - param aspect: (width / height) of the canvas.\r\n * - param near: Clip every Z lower than `near`.\r\n * - param far: Clip every Z greater than `far`.\r\n */\r\nfunction perspective4(fieldAngle: number, aspect: number,\r\n    near: number, far: number,\r\n    output: Float32Array | undefined = undefined) {\r\n    const result = output || new Float32Array(16);\r\n    const f = Math.tan(0.5 * (Math.PI - fieldAngle));\r\n    const rangeInv = 1.0 / (near - far);\r\n\r\n    result[M4_00] = f / aspect;\r\n    result[M4_10] = 0;\r\n    result[M4_20] = 0;\r\n    result[M4_30] = 0;\r\n\r\n    result[M4_01] = 0;\r\n    result[M4_11] = f;\r\n    result[M4_21] = 0;\r\n    result[M4_31] = 0;\r\n\r\n    result[M4_02] = 0;\r\n    result[M4_12] = 0;\r\n    result[M4_22] = (near + far) * rangeInv;\r\n    result[M4_32] = -1;\r\n\r\n    result[M4_03] = 0;\r\n    result[M4_13] = 0;\r\n    result[M4_23] = near * far * rangeInv * 2;\r\n    result[M4_33] = 0;\r\n\r\n    return result;\r\n}\r\n\r\nfunction identity3() {\r\n    return mat3(1, 0, 0, 0, 1, 0, 0, 0, 1);\r\n}\r\n\r\nfunction identity4() {\r\n    return mat4(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\r\n}\r\n\r\nfunction inverse4(m: Float32Array, output: Float32Array | undefined = undefined): Float32Array {\r\n    const dst = output || mat4(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\r\n    const m00 = m[M4_00];\r\n    const m01 = m[M4_10];\r\n    const m02 = m[M4_20];\r\n    const m03 = m[M4_30];\r\n    const m10 = m[M4_01];\r\n    const m12 = m[M4_11];\r\n    const m11 = m[M4_21];\r\n    const m13 = m[M4_31];\r\n    const m20 = m[M4_02];\r\n    const m21 = m[M4_12];\r\n    const m22 = m[M4_22];\r\n    const m23 = m[M4_32];\r\n    const m30 = m[M4_03];\r\n    const m31 = m[M4_13];\r\n    const m32 = m[M4_23];\r\n    const m33 = m[M4_33];\r\n    const tmp_0 = m22 * m33;\r\n    const tmp_1 = m32 * m23;\r\n    const tmp_2 = m12 * m33;\r\n    const tmp_3 = m32 * m13;\r\n    const tmp_4 = m12 * m23;\r\n    const tmp_5 = m22 * m13;\r\n    const tmp_6 = m02 * m33;\r\n    const tmp_7 = m32 * m03;\r\n    const tmp_8 = m02 * m23;\r\n    const tmp_9 = m22 * m03;\r\n    const tmp_10 = m02 * m13;\r\n    const tmp_11 = m12 * m03;\r\n    const tmp_12 = m20 * m31;\r\n    const tmp_13 = m30 * m21;\r\n    const tmp_14 = m10 * m31;\r\n    const tmp_15 = m30 * m11;\r\n    const tmp_16 = m10 * m21;\r\n    const tmp_17 = m20 * m11;\r\n    const tmp_18 = m00 * m31;\r\n    const tmp_19 = m30 * m01;\r\n    const tmp_20 = m00 * m21;\r\n    const tmp_21 = m20 * m01;\r\n    const tmp_22 = m00 * m11;\r\n    const tmp_23 = m10 * m01;\r\n\r\n    const t0 = (tmp_0 * m11 + tmp_3 * m21 + tmp_4 * m31) -\r\n        (tmp_1 * m11 + tmp_2 * m21 + tmp_5 * m31);\r\n    const t1 = (tmp_1 * m01 + tmp_6 * m21 + tmp_9 * m31) -\r\n        (tmp_0 * m01 + tmp_7 * m21 + tmp_8 * m31);\r\n    const t2 = (tmp_2 * m01 + tmp_7 * m11 + tmp_10 * m31) -\r\n        (tmp_3 * m01 + tmp_6 * m11 + tmp_11 * m31);\r\n    const t3 = (tmp_5 * m01 + tmp_8 * m11 + tmp_11 * m21) -\r\n        (tmp_4 * m01 + tmp_9 * m11 + tmp_10 * m21);\r\n\r\n    const d = 1.0 / (m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3);\r\n\r\n    dst[M4_00] = d * t0;\r\n    dst[1] = d * t1;\r\n    dst[2] = d * t2;\r\n    dst[3] = d * t3;\r\n    dst[4] = d * ((tmp_1 * m10 + tmp_2 * m20 + tmp_5 * m30) -\r\n        (tmp_0 * m10 + tmp_3 * m20 + tmp_4 * m30));\r\n    dst[5] = d * ((tmp_0 * m00 + tmp_7 * m20 + tmp_8 * m30) -\r\n        (tmp_1 * m00 + tmp_6 * m20 + tmp_9 * m30));\r\n    dst[6] = d * ((tmp_3 * m00 + tmp_6 * m10 + tmp_11 * m30) -\r\n        (tmp_2 * m00 + tmp_7 * m10 + tmp_10 * m30));\r\n    dst[7] = d * ((tmp_4 * m00 + tmp_9 * m10 + tmp_10 * m20) -\r\n        (tmp_5 * m00 + tmp_8 * m10 + tmp_11 * m20));\r\n    dst[8] = d * ((tmp_12 * m13 + tmp_15 * m23 + tmp_16 * m33) -\r\n        (tmp_13 * m13 + tmp_14 * m23 + tmp_17 * m33));\r\n    dst[9] = d * ((tmp_13 * m03 + tmp_18 * m23 + tmp_21 * m33) -\r\n        (tmp_12 * m03 + tmp_19 * m23 + tmp_20 * m33));\r\n    dst[10] = d * ((tmp_14 * m03 + tmp_19 * m13 + tmp_22 * m33) -\r\n        (tmp_15 * m03 + tmp_18 * m13 + tmp_23 * m33));\r\n    dst[11] = d * ((tmp_17 * m03 + tmp_20 * m13 + tmp_23 * m23) -\r\n        (tmp_16 * m03 + tmp_21 * m13 + tmp_22 * m23));\r\n    dst[12] = d * ((tmp_14 * m22 + tmp_17 * m32 + tmp_13 * m12) -\r\n        (tmp_16 * m32 + tmp_12 * m12 + tmp_15 * m22));\r\n    dst[13] = d * ((tmp_20 * m32 + tmp_12 * m02 + tmp_19 * m22) -\r\n        (tmp_18 * m22 + tmp_21 * m32 + tmp_13 * m02));\r\n    dst[14] = d * ((tmp_18 * m12 + tmp_23 * m32 + tmp_15 * m02) -\r\n        (tmp_22 * m32 + tmp_14 * m02 + tmp_19 * m12));\r\n    dst[15] = d * ((tmp_22 * m22 + tmp_16 * m02 + tmp_21 * m12) -\r\n        (tmp_20 * m12 + tmp_23 * m22 + tmp_17 * m02));\r\n\r\n    return dst;\r\n}\r\n\r\nfunction projection3(width: number, height: number) {\r\n    return mat3(2 / width, 0, 0, 0, -2 / height, 0, 0, 0, 1);\r\n}\r\n\r\nfunction projection4(width: number, height: number, depth: number) {\r\n    return mat4(2 / width, 0, 0, 0, 0, -2 / height, 0, 0, 0, 0, 2 / depth, 0, 0, 0, 0, 1);\r\n}\r\n\r\nfunction translation3(tx: number, ty: number) {\r\n    return mat3(1, 0, 0, 0, 1, 0, tx, ty, 1);\r\n}\r\n\r\nfunction translation4(tx: number, ty: number, tz: number) {\r\n    return mat4(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, tx, ty, tz, 1);\r\n}\r\n\r\nfunction rotation3(rad: number) {\r\n    const c = Math.cos(rad);\r\n    const s = Math.sin(rad);\r\n    return mat3(c, -s, 0, s, c, 0, 0, 0, 1);\r\n}\r\n\r\nfunction rotationX4(rad: number, output: Float32Array | undefined = undefined) {\r\n    const result = output || new Float32Array(16);\r\n    const c = Math.cos(rad);\r\n    const s = Math.sin(rad);\r\n    result[M4_00] = 1;\r\n    result[1] = 0;\r\n    result[2] = 0;\r\n    result[3] = 0;\r\n\r\n    result[4] = 0;\r\n    result[5] = c;\r\n    result[6] = s;\r\n    result[7] = 0;\r\n\r\n    result[8] = 0;\r\n    result[9] = -s;\r\n    result[10] = c;\r\n    result[11] = 0;\r\n\r\n    result[12] = 0;\r\n    result[13] = 0;\r\n    result[14] = 0;\r\n    result[15] = 1;\r\n    return result;\r\n}\r\n\r\nfunction rotationY4(rad: number, output: Float32Array | undefined = undefined) {\r\n    const result = output || new Float32Array(16);\r\n    const c = Math.cos(rad);\r\n    const s = Math.sin(rad);\r\n    result[M4_00] = c;\r\n    result[1] = 0;\r\n    result[2] = -s;\r\n    result[3] = 0;\r\n\r\n    result[4] = 0;\r\n    result[5] = 1;\r\n    result[6] = 0;\r\n    result[7] = 0;\r\n\r\n    result[8] = s;\r\n    result[9] = 0;\r\n    result[10] = c;\r\n    result[11] = 0;\r\n\r\n    result[12] = 0;\r\n    result[13] = 0;\r\n    result[14] = 0;\r\n    result[15] = 1;\r\n    return result;\r\n}\r\n\r\nfunction rotationZ4(rad: number, output: Float32Array | undefined = undefined) {\r\n    const result = output || new Float32Array(16);\r\n    const c = Math.cos(rad);\r\n    const s = Math.sin(rad);\r\n    result[M4_00] = c;\r\n    result[1] = s;\r\n    result[2] = 0;\r\n    result[3] = 0;\r\n    result[4] = -s;\r\n    result[5] = c;\r\n    result[6] = 0;\r\n    result[7] = 0;\r\n    result[8] = 0;\r\n    result[9] = 0;\r\n    result[10] = 1;\r\n    result[11] = 0;\r\n    result[12] = 0;\r\n    result[13] = 0;\r\n    result[14] = 0;\r\n    result[15] = 1;\r\n    return result;\r\n}\r\n\r\nfunction rotationXY4(radX: number, radY: number, output: Float32Array | undefined = undefined) {\r\n    const result = output || new Float32Array(16);\r\n    const cx = Math.cos(radX);\r\n    const sx = Math.sin(radX);\r\n    const cy = Math.cos(radY);\r\n    const sy = Math.sin(radY);\r\n    result[M4_00] = cy;\r\n    result[1] = sx * sy;\r\n    result[2] = -cx * sy;\r\n    result[3] = 0;\r\n    result[4] = 0;\r\n    result[5] = cx;\r\n    result[6] = sx;\r\n    result[7] = 0;\r\n    result[8] = sy;\r\n    result[9] = -sx * cy;\r\n    result[10] = cx * cy;\r\n    result[11] = 0;\r\n    result[12] = 0;\r\n    result[13] = 0;\r\n    result[14] = 0;\r\n    result[15] = 1;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Perform a rotation on X axis, then on Y axis.\r\n *\r\n * @param   {float} radY - Angle around Y axis in radians.\r\n * @param   {float} radX - Angle around X axis in radians.\r\n * @param   {Float32Array} _result [description]\r\n * @returns {[type]}        [description]\r\n */\r\nfunction rotationYX4(radY: number, radX: number, output: Float32Array | undefined = undefined) {\r\n    const result = output || new Float32Array(16);\r\n    const\r\n        cy = Math.cos(radY),\r\n        sy = Math.sin(radY),\r\n        cx = Math.cos(radX),\r\n        sx = Math.sin(radX);\r\n    result[M4_00] = cy;\r\n    result[1] = 0;\r\n    result[2] = sy;\r\n    result[3] = 0;\r\n    result[4] = -sy * sx;\r\n    result[5] = cx;\r\n    result[6] = cy * sx;\r\n    result[7] = 0;\r\n    result[8] = -sy * cx;\r\n    result[9] = -sx;\r\n    result[10] = cy * cx;\r\n    result[11] = 0;\r\n    result[12] = 0;\r\n    result[13] = 0;\r\n    result[14] = 0;\r\n    result[15] = 1;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Perform a rotation on Z axis, then on X axis.\r\n *\r\n * @param   {float} radX - Angle around X axis in radians.\r\n * @param   {float} radZ - Angle around Z axis in radians.\r\n * @param   {Float32Array} _result [description]\r\n * @returns {[type]}        [description]\r\n */\r\nfunction rotationXZ4(radX: number, radZ: number, output: Float32Array | undefined = undefined) {\r\n    const result = output || new Float32Array(16);\r\n    const\r\n        cx = Math.cos(radX),\r\n        sx = Math.sin(radX),\r\n        cz = Math.cos(radZ),\r\n        sz = Math.sin(radZ);\r\n    result[M4_00] = cz;\r\n    result[1] = cx * sz;\r\n    result[2] = sx * sz;\r\n    result[3] = 0;\r\n    result[4] = -sz;\r\n    result[5] = cx * cz;\r\n    result[6] = sx * cz;\r\n    result[7] = 0;\r\n    result[8] = 0;\r\n    result[9] = -sx;\r\n    result[10] = cx;\r\n    result[11] = 0;\r\n    result[12] = 0;\r\n    result[13] = 0;\r\n    result[14] = 0;\r\n    result[15] = 1;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Perform a rotation on X axis, then on Z axis.\r\n *\r\n * @param   {float} radZ - Angle around Z axis in radians.\r\n * @param   {float} radX - Angle around X axis in radians.\r\n * @param   {Float32Array} _result [description]\r\n * @returns {[type]}        [description]\r\n */\r\nfunction rotationZX4(radZ: number, radX: number, output: Float32Array | undefined = undefined) {\r\n    const result = output || new Float32Array(16);\r\n    const\r\n        cz = Math.cos(radZ),\r\n        sz = Math.sin(radZ),\r\n        cx = Math.cos(radX),\r\n        sx = Math.sin(radX);\r\n    result[M4_00] = cz;\r\n    result[1] = sz;\r\n    result[2] = 0;\r\n    result[3] = 0;\r\n    result[4] = -sz * cx;\r\n    result[5] = cz * cx;\r\n    result[6] = sx;\r\n    result[7] = 0;\r\n    result[8] = sz * sx;\r\n    result[9] = -cz * sx;\r\n    result[10] = cx;\r\n    result[11] = 0;\r\n    result[12] = 0;\r\n    result[13] = 0;\r\n    result[14] = 0;\r\n    result[15] = 1;\r\n    return result;\r\n}\r\n\r\nfunction scaling3(sx: number, sy: number) {\r\n    return mat3(sx, 0, 0, 0, sy, 0, 0, 0, 1);\r\n}\r\n\r\nfunction scaling4(sx: number, sy: number, sz: number) {\r\n    return mat4(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);\r\n}\r\n\r\nfunction mat2(v00: number, v10: number, v01: number, v11: number) {\r\n    return new Float32Array([v00, v10, v01, v11]);\r\n}\r\n\r\nfunction mat3(v00: number, v10: number, v20: number,\r\n    v01: number, v11: number, v21: number,\r\n    v02: number, v12: number, v22: number) {\r\n    return new Float32Array([v00, v10, v20, v01, v11, v21, v02, v12, v22]);\r\n}\r\n\r\nfunction mat4(v00: number, v10: number, v20: number, v30: number,\r\n    v01: number, v11: number, v21: number, v31: number,\r\n    v02: number, v12: number, v22: number, v32: number,\r\n    v03: number, v13: number, v23: number, v33: number) {\r\n    return new Float32Array([v00, v10, v20, v30, v01, v11, v21, v31, v02, v12, v22, v32, v03, v13, v23, v33]);\r\n}\r\n\r\nfunction vec2(a: number, b: number) {\r\n    return new Float32Array([a, b]);\r\n}\r\n\r\nfunction vec3(a: number, b: number, c: number) {\r\n    return new Float32Array([a, b, c]);\r\n}\r\n\r\nfunction vec4(a: number, b: number, c: number, d: number) {\r\n    return new Float32Array([a, b, c, d]);\r\n}\r\n\r\nconst MUL = {\r\n    m4m4: function(a: Float32Array, b: Float32Array, output: Float32Array | undefined = undefined) {\r\n        const result = output || new Float32Array(4);\r\n        result[0] = a[0] * b[0] + a[2] * b[1];\r\n        result[1] = a[1] * b[0] + a[3] * b[1];\r\n        result[2] = a[0] * b[2] + a[2] * b[3];\r\n        result[3] = a[1] * b[2] + a[3] * b[3];\r\n        return result;\r\n    },\r\n    m9m9: function(a: Float32Array, b: Float32Array, output: Float32Array | undefined = undefined) {\r\n        const result = output || new Float32Array(9);\r\n        result[0] = a[0] * b[0] + a[3] * b[1] + a[6] * b[2];\r\n        result[1] = a[1] * b[0] + a[4] * b[1] + a[7] * b[2];\r\n        result[2] = a[2] * b[0] + a[5] * b[1] + a[8] * b[2];\r\n        result[3] = a[0] * b[3] + a[3] * b[4] + a[6] * b[5];\r\n        result[4] = a[1] * b[3] + a[4] * b[4] + a[7] * b[5];\r\n        result[5] = a[2] * b[3] + a[5] * b[4] + a[8] * b[5];\r\n        result[6] = a[0] * b[6] + a[3] * b[7] + a[6] * b[8];\r\n        result[7] = a[1] * b[6] + a[4] * b[7] + a[7] * b[8];\r\n        result[8] = a[2] * b[6] + a[5] * b[7] + a[8] * b[8];\r\n        return result;\r\n    },\r\n    m16m16: function(a: Float32Array, b: Float32Array, output: Float32Array | undefined = undefined) {\r\n        const result = output || new Float32Array(16);\r\n        result[M4_00] = a[M4_00] * b[M4_00] + a[4] * b[1] + a[8] * b[2] + a[12] * b[3];\r\n        result[1] = a[1] * b[M4_00] + a[5] * b[1] + a[9] * b[2] + a[13] * b[3];\r\n        result[2] = a[2] * b[M4_00] + a[6] * b[1] + a[10] * b[2] + a[14] * b[3];\r\n        result[3] = a[3] * b[M4_00] + a[7] * b[1] + a[11] * b[2] + a[15] * b[3];\r\n        result[4] = a[M4_00] * b[4] + a[4] * b[5] + a[8] * b[6] + a[12] * b[7];\r\n        result[5] = a[1] * b[4] + a[5] * b[5] + a[9] * b[6] + a[13] * b[7];\r\n        result[6] = a[2] * b[4] + a[6] * b[5] + a[10] * b[6] + a[14] * b[7];\r\n        result[7] = a[3] * b[4] + a[7] * b[5] + a[11] * b[6] + a[15] * b[7];\r\n        result[8] = a[M4_00] * b[8] + a[4] * b[9] + a[8] * b[10] + a[12] * b[11];\r\n        result[9] = a[1] * b[8] + a[5] * b[9] + a[9] * b[10] + a[13] * b[11];\r\n        result[10] = a[2] * b[8] + a[6] * b[9] + a[10] * b[10] + a[14] * b[11];\r\n        result[11] = a[3] * b[8] + a[7] * b[9] + a[11] * b[10] + a[15] * b[11];\r\n        result[12] = a[M4_00] * b[12] + a[4] * b[13] + a[8] * b[14] + a[12] * b[15];\r\n        result[13] = a[1] * b[12] + a[5] * b[13] + a[9] * b[14] + a[13] * b[15];\r\n        result[14] = a[2] * b[12] + a[6] * b[13] + a[10] * b[14] + a[14] * b[15];\r\n        result[15] = a[3] * b[12] + a[7] * b[13] + a[11] * b[14] + a[15] * b[15];\r\n        return result;\r\n    },\r\n    m16m4: function(a: Float32Array, b: Float32Array, output: Float32Array | undefined = undefined) {\r\n        const result = output || new Float32Array(4);\r\n        result[0] = a[0] * b[0] + a[4] * b[1] + a[8] * b[2] + a[12] * b[3];\r\n        result[1] = a[1] * b[0] + a[5] * b[1] + a[9] * b[2] + a[13] * b[3];\r\n        result[2] = a[2] * b[0] + a[6] * b[1] + a[10] * b[2] + a[14] * b[3];\r\n        result[3] = a[3] * b[0] + a[7] * b[1] + a[11] * b[2] + a[15] * b[3];\r\n        return result;\r\n    }\r\n};\r\n\r\n/**\r\n * Invert a 4x4 matrix.\r\n *\r\n * @param   {[type]} a       [description]\r\n * @param   {[type]} _result [description]\r\n * @returns {[type]}         [description]\r\n */\r\nfunction invert4(a: Float32Array, output: Float32Array | undefined = undefined) {\r\n    const out = output || new Float32Array(4),\r\n        a00 = a[0],\r\n        a01 = a[1],\r\n        a02 = a[2],\r\n        a03 = a[3],\r\n        a10 = a[4],\r\n        a11 = a[5],\r\n        a12 = a[6],\r\n        a13 = a[7],\r\n        a20 = a[8],\r\n        a21 = a[9],\r\n        a22 = a[10],\r\n        a23 = a[11],\r\n        a30 = a[12],\r\n        a31 = a[13],\r\n        a32 = a[14],\r\n        a33 = a[15],\r\n        b00 = a00 * a11 - a01 * a10,\r\n        b01 = a00 * a12 - a02 * a10,\r\n        b02 = a00 * a13 - a03 * a10,\r\n        b03 = a01 * a12 - a02 * a11,\r\n        b04 = a01 * a13 - a03 * a11,\r\n        b05 = a02 * a13 - a03 * a12,\r\n        b06 = a20 * a31 - a21 * a30,\r\n        b07 = a20 * a32 - a22 * a30,\r\n        b08 = a20 * a33 - a23 * a30,\r\n        b09 = a21 * a32 - a22 * a31,\r\n        b10 = a21 * a33 - a23 * a31,\r\n        b11 = a22 * a33 - a23 * a32,\r\n        // Calculate the determinant\r\n        invDet = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n    if (!invDet) return null;\r\n\r\n    const det = 1.0 / invDet;\r\n\r\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n\r\n    return out;\r\n}\r\n\r\nfunction mul(a: Float32Array, b: Float32Array, result: Float32Array|undefined = undefined) {\r\n    const f = MUL[`m${a.length}m${b.length}`];\r\n    if (typeof f !== 'function') {\r\n        throw Error(\"[webgl.math.mul] I don't know how to multiply 'M\" +\r\n            a.length + \"' with 'M\" + b.length + \"'!\");\r\n    }\r\n    return f(a, b, result);\r\n}\r\n\r\n/**\r\n * Compute binomial coefficients.\r\n *\r\n * @param  {int} size - Size of the array we want.\r\n *\r\n * @return {array} Array of `size` doubles.\r\n */\r\nfunction computeBinomialCoeffs(size: number): Float32Array {\r\n    const n = size - 1;\r\n    const coeffs = new Float32Array(size);\r\n    const last = size - 1;\r\n\r\n    coeffs[0] = 1;\r\n    coeffs[last] = 1;\r\n\r\n    for (let p = 1; p <= size / 2; p++) {\r\n        let nom = 1;\r\n        let denom = 1;\r\n        for (let k = 1; k <= p; k++) {\r\n            denom *= k;\r\n            nom *= n - p + k;\r\n        }\r\n        const value = nom / denom;\r\n        coeffs[p] = value;\r\n        coeffs[last - p] = value;\r\n    }\r\n    return coeffs;\r\n}\r\n","const CAPACITY = 3;\r\n\r\n/**\r\n * Helper to manage a pointer move.\r\n * It gives you the location, the speed and the acceleration of your pointer.\r\n *\r\n * @type {[type]}\r\n */\r\nexport default class Moves {\r\n    private _x0: number;\r\n    private _y0: number;\r\n    private _time0: number;\r\n    private _x: number[] = new Array(CAPACITY);\r\n    private _y: number[] = new Array(CAPACITY);\r\n    private _time: number[] = new Array(CAPACITY);\r\n    private _cursor: number = 0;\r\n\r\n    constructor(x: number = 0, y: number = 0) {\r\n        this.init(x, y);\r\n    }\r\n\r\n    init(x: number, y: number) {\r\n        this._time0 = this.now;\r\n        this._x0 = x;\r\n        this._y0 = y;\r\n        this._x = this._x.fill(this._x0, 0, CAPACITY);\r\n        this._y = this._y.fill(this._y0, 0, CAPACITY);\r\n        this._time = this._time.fill(this._time0, 0, CAPACITY);\r\n    }\r\n\r\n    _index(shift: number) {\r\n        return (this._cursor + shift) % CAPACITY;\r\n    }\r\n\r\n    get now() { return Date.now(); }\r\n\r\n    add(x: number, y: number) {\r\n        const idx = (this._cursor + CAPACITY - 1) % CAPACITY;\r\n        this._time[idx] = this.now;\r\n        this._x[idx] = x;\r\n        this._y[idx] = y;\r\n        this._cursor = idx;\r\n    }\r\n\r\n    get elapsedTime() { return this.now - this._time0; }\r\n\r\n    get x() { return this._x[this._cursor]; }\r\n    get y() { return this._y[this._cursor]; }\r\n\r\n    get startX() { return this._x0; }\r\n    get startY() { return this._y0; }\r\n\r\n    get speedX() {\r\n        const idx0 = this._cursor;\r\n        const idx1 = this._index(1);\r\n        const time = this._time[idx0] - this._time[idx1];\r\n        if (time <= 0) return 0;\r\n        return (this._x[idx0] - this._x[idx1]) / time;\r\n    }\r\n\r\n    get speedY() {\r\n        const idx0 = this._cursor;\r\n        const idx1 = this._index(1);\r\n        const time = this._time[idx0] - this._time[idx1];\r\n        if (time <= 0) return 0;\r\n        return (this._y[idx0] - this._y[idx1]) / time;\r\n    }\r\n\r\n    get accelX() {\r\n        const idx0 = this._index(0);\r\n        const time0 = this._time[idx0];\r\n\r\n        const idx1 = this._index(1);\r\n        const time1 = this._time[idx1];\r\n\r\n        const time01 = time0 - time1;\r\n\r\n        if (time01 <= 0) return 0;\r\n\r\n        const idx2 = this._index(2);\r\n        const time2 = this._time[idx2];\r\n\r\n        const time12 = time1 - time2;\r\n\r\n        if (time12 <= 0) return 0;\r\n\r\n        const x0 = this._x[idx0];\r\n        const x1 = this._x[idx1];\r\n        const x2 = this._x[idx2];\r\n\r\n        const speed01 = (x0 - x1) / time01;\r\n        const speed12 = (x1 - x2) / time12;\r\n\r\n        return (speed01 - speed12) / time01;\r\n    }\r\n\r\n    get accelY() {\r\n        const idx0 = this._index(0);\r\n        const time0 = this._time[idx0];\r\n\r\n        const idx1 = this._index(1);\r\n        const time1 = this._time[idx1];\r\n\r\n        const time01 = time0 - time1;\r\n\r\n        if (time01 <= 0) return 0;\r\n\r\n        const idx2 = this._index(2);\r\n        const time2 = this._time[idx2];\r\n\r\n        const time12 = time1 - time2;\r\n\r\n        if (time12 <= 0) return 0;\r\n\r\n        const y0 = this._y[idx0];\r\n        const y1 = this._y[idx1];\r\n        const y2 = this._y[idx2];\r\n\r\n        const speed01 = (y0 - y1) / time01;\r\n        const speed12 = (y1 - y2) / time12;\r\n\r\n        return (speed01 - speed12) / time01;\r\n    }\r\n}\r\n","type TIdentifier = number | null;\r\n\r\nexport default class Finger {\r\n    private fingers: TIdentifier[] = [];\r\n\r\n    getIndex(identifier: number): number {\r\n        const index = this.fingers.indexOf(identifier);\r\n        if (index !== -1) return index;\r\n        const indexOfFirstNull = this.fingers.indexOf(null);\r\n        if (indexOfFirstNull !== -1) {\r\n            this.fingers[indexOfFirstNull] = identifier;\r\n            return indexOfFirstNull;\r\n        }\r\n        this.fingers.push(identifier);\r\n        return this.fingers.length - 1;\r\n    }\r\n\r\n    remove(identifier: number) {\r\n        const index = this.fingers.indexOf(identifier);\r\n        if (index !== -1) this.fingers[index] = null;\r\n    }\r\n}\r\n","/**\r\n * BasicHandler(\r\n *     element: HTMLElement,\r\n *     handleDown: TBasicHandler,\r\n *     handleUp: TBasicHandler,\r\n *     handleMove: TBasicHandler\r\n * )\r\n *\r\n * Deals with three basic events : DOWN, UP and MOVE.\r\n * If the device has several input touches, we will return\r\n * only one event.\r\n *\r\n * A TBasicHandler is a synthetic event object:\r\n *   - x: X coordinate relative to the viewport, not including any scroll offset.\r\n *   - y: Y coordinate relative to the viewport, not including any scroll offset.\r\n *   - startX\r\n *   - startY\r\n *   - index: For multi-touch system. The first one is 0, the second is 1, etc.\r\n *   - buttons: 1 = left, 2 = right.\r\n *   - mouse: \"mouse\" | \"touch\" | \"pen\".\r\n *   - clear(): Call stopPropagation() and preventDefault() on this event.\r\n *\r\n */\r\nimport Finger from \"./finger\"\r\nimport { IBasicEvent } from \"./basic-handler.types\"\r\n\r\ninterface IMovingElement {\r\n    // Coords relative to the element.\r\n    x: number,\r\n    y: number,\r\n    index: number,\r\n    target: HTMLElement,\r\n    handleUp: (event: IBasicEvent) => void,\r\n    handleMove: (event: IBasicEvent) => void\r\n}\r\n\r\nconst movingElements: IMovingElement[] = [];\r\n\r\nwindow.addEventListener(\"mousemove\", (event: MouseEvent) => {\r\n    for (const movingElem of movingElements) {\r\n        if (event.cancelBubble) continue;\r\n        const { target, handleMove, x, y, index } = movingElem;\r\n        if (typeof handleMove !== 'function') continue;\r\n        try {\r\n            handleMove({\r\n                x: event.clientX - x,\r\n                y: event.clientY - y,\r\n                index,\r\n                event,\r\n                pointer: \"mouse\",\r\n                buttons: translateButtons(event),\r\n                target,\r\n                clear: createClear(event)\r\n            })\r\n        }\r\n        catch (ex) {\r\n            console.error(`[tfw.gesture.basic-handler] window.mousemove`, ex)\r\n            console.error(\"    handler=\", handleMove)\r\n            console.error(\"    event=\", event)\r\n        }\r\n    }\r\n}, false);\r\n\r\nwindow.addEventListener(\"mouseup\", (event: MouseEvent) => {\r\n    for (const movingElem of movingElements) {\r\n        if (event.cancelBubble) continue;\r\n        const { target, handleUp, x, y, index } = movingElem;\r\n        if (typeof handleUp !== 'function') continue;\r\n        try {\r\n            handleUp({\r\n                x: event.clientX - x,\r\n                y: event.clientY - y,\r\n                index,\r\n                event,\r\n                pointer: \"mouse\",\r\n                buttons: translateButtons(event),\r\n                target,\r\n                clear: createClear(event)\r\n            })\r\n        }\r\n        catch (ex) {\r\n            console.error(`[tfw.gesture.basic-handler] window.mouseup`, ex)\r\n            console.error(\"    handler=\", handleUp)\r\n            console.error(\"    event=\", event)\r\n        }\r\n    }\r\n    movingElements.splice(0, movingElements.length)\r\n}, false);\r\n\r\n\r\n\r\ntype TTouchEventHandler = (evt: TouchEvent) => void;\r\ntype TMouseEventHandler = (evt: MouseEvent) => void;\r\ntype TBasicHandler = (evt: IBasicEvent) => void | undefined;\r\n\r\ninterface IDeviceHandlers {\r\n    touchstart?: TTouchEventHandler;\r\n    touchend?: TTouchEventHandler;\r\n    touchmove?: TTouchEventHandler;\r\n    mousedown?: TMouseEventHandler;\r\n    mouseup?: TMouseEventHandler;\r\n    mousemove?: TMouseEventHandler;\r\n    mouseout?: TMouseEventHandler;\r\n}\r\n\r\nexport default class BasicHandler {\r\n    readonly element: HTMLElement;\r\n    mouseType: string = \"\";\r\n    mouseTypeTime: number = 0;\r\n    deviceHandlers: IDeviceHandlers = {};\r\n    fingers: Finger = new Finger();\r\n    pressed: boolean = false;\r\n\r\n    constructor(element: HTMLElement,\r\n                handleDown: TBasicHandler,\r\n                handleUp: TBasicHandler,\r\n                handleMove: TBasicHandler) {\r\n        this.element = element;\r\n        attachDownEvent.call(this, handleDown, handleUp, handleMove);\r\n    }\r\n\r\n    /**\r\n     * If you device can hold mouse and touch events, you will receive two events.\r\n     * This function prevent it.\r\n     *\r\n     * @param   mouseType\r\n     * @returns If `false`, we must ignore this event.\r\n     */\r\n    checkMouseType(mouseType: string): boolean {\r\n        const now = Date.now();\r\n        const delay = now - this.mouseTypeTime;\r\n        this.mouseTypeTime = now;\r\n        if (this.mouseType.length === 0 || delay > 500) {\r\n            // If the user waits more than 500ms, he can change of mouse.\r\n            this.mouseType = mouseType;\r\n            return true;\r\n        }\r\n        return this.mouseType === mouseType;\r\n    }\r\n\r\n    detachEvents() {\r\n        const element = this.element;\r\n        const { touchstart, mousedown } = this.deviceHandlers;\r\n\r\n        if (touchstart) element.removeEventListener(\"touchstart\", touchstart, false);\r\n        if (mousedown) element.removeEventListener(\"mousedown\", mousedown, false);\r\n    }\r\n}\r\n\r\n\r\nfunction attachDownEvent(this: BasicHandler,\r\n                         handleDown: TBasicHandler,\r\n                         handleUp: TBasicHandler,\r\n                         handleMove: TBasicHandler) {\r\n    attachDownEventTouch.call(this, handleDown, handleUp, handleMove);\r\n    attachDownEventMouse.call(this, handleDown, handleUp, handleMove);\r\n}\r\n\r\n\r\nfunction attachDownEventTouch(this: BasicHandler,\r\n                              handleDown: TBasicHandler,\r\n                              handleUp: TBasicHandler,\r\n                              handleMove: TBasicHandler) {\r\n    const { element, deviceHandlers } = this;\r\n    const handler = (event: TouchEvent) => {\r\n        if (!this.checkMouseType(\"touch\")) return;\r\n        const rect = element.getBoundingClientRect();\r\n        for (const touch of event.changedTouches) {\r\n            const index = this.fingers.getIndex(touch.identifier)\r\n            const x = touch.clientX - rect.left;\r\n            const y = touch.clientY - rect.top;\r\n            handleDown({\r\n                x,\r\n                y,\r\n                index,\r\n                event,\r\n                buttons: 1,\r\n                pointer: \"touch\",\r\n                target: element,\r\n                clear: createClear(event)\r\n            });\r\n            movingElements.push({\r\n                handleUp, handleMove, index,\r\n                target: element,\r\n                x,\r\n                y\r\n            })\r\n        }\r\n    };\r\n    deviceHandlers.touchstart = handler;\r\n    element.addEventListener(\"touchstart\", handler, false);\r\n}\r\n\r\n\r\nfunction attachDownEventMouse(this: BasicHandler,\r\n                              handleDown: TBasicHandler,\r\n                              handleUp: TBasicHandler,\r\n                              handleMove: TBasicHandler) {\r\n    const { element, deviceHandlers } = this;\r\n    const handler = (event: MouseEvent) => {\r\n        if (!this.checkMouseType(\"mouse\")) return;\r\n        const rect = element.getBoundingClientRect();\r\n        this.pressed = true;\r\n        const x = event.clientX - rect.left;\r\n        const y = event.clientY - rect.top;\r\n        if (typeof handleDown === 'function') {\r\n            handleDown({\r\n                x,\r\n                y,\r\n                index: 0,\r\n                buttons: translateButtons(event),\r\n                pointer: \"mouse\",\r\n                event,\r\n                target: element,\r\n                clear: createClear(event)\r\n            });\r\n        }\r\n        movingElements.push({\r\n            handleUp, handleMove,\r\n            index: 0,\r\n            target: element,\r\n            x: rect.left,\r\n            y: rect.top\r\n        })\r\n    };\r\n    deviceHandlers.mousedown = handler;\r\n    element.addEventListener(\"mousedown\", handler, false);\r\n}\r\n\r\n\r\nfunction createClear(evt: MouseEvent | TouchEvent) {\r\n    return () => {\r\n        evt.preventDefault();\r\n        evt.stopPropagation();\r\n    }\r\n}\r\n\r\n/**\r\n * Some mouses have only one button (on Mac, for instance).\r\n * So we will emulate the other buttons by looking at Ctrl and Meta keys.\r\n */\r\nfunction translateButtons(event: MouseEvent): number {\r\n    const { buttons, metaKey, ctrlKey } = event;\r\n    if (buttons !== 1) return buttons;\r\n    if (metaKey && !ctrlKey) return 2;\r\n    if (!metaKey && ctrlKey) return 4;\r\n    return buttons;\r\n}\r\n","/**\n * Here is the list of all parameters used if all the handlers.\n * * x, y: coord relative to the upper-left corner of the element.\n *\n * tap({ x: number, y: number, index: number })\n *\n */\n\nimport Moves from \"./moves\"\nimport BasicHandler from \"./basic-handler\"\nimport { IBasicEvent } from \"./basic-handler.types\"\nimport { IEvent, IWheelEvent } from \"./types\"\n\nconst SYMBOL = Symbol(\"gesture\");\n\nlet ID = 0;\n\nexport interface IHTMLElementWithGesture extends HTMLElement {\n    // A special attribute to attach Gesture object.\n    [SYMBOL]?: Gesture\n}\n\ntype THandlers = {\n    tap?: (event: IEvent) => void;\n    down?: (event: IEvent) => void;\n    up?: (event: IEvent) => void;\n    pan?: (event: IEvent) => void;\n    pandown?: (event: IEvent) => void;\n    panup?: (event: IEvent) => void;\n    panvertical?: (event: IEvent) => void;\n    swipe?: (event: IEvent) => void;\n    swipedown?: (event: IEvent) => void;\n    swipeup?: (event: IEvent) => void;\n    swipevertical?: (event: IEvent) => void;\n    swipeleft?: (event: IEvent) => void;\n    keydown?: (event: KeyboardEvent) => void;\n    keyup?: (event: KeyboardEvent) => void;\n    wheel?: (event: IWheelEvent) => void;\n    [key: string]: ((evt: any) => void) | undefined;\n};\n\ninterface IPointer {\n    isDown: boolean;\n    moves: Moves;\n    rect: {\n        left: number;\n        top: number;\n        width: number;\n        height: number;\n    };\n    type?: string | null;\n    time?: number;\n    id?: number;\n}\n\nconst STANDARD_EVENTS = [\"keydown\", \"keyup\", \"wheel\"];\n\nclass Gesture {\n    //private readonly basicHandler: BasicHandler;\n    private handlers: THandlers;\n    private element: IHTMLElementWithGesture;\n    private readonly pointers: IPointer[];\n    private readonly id: number;\n\n    constructor(elem: IHTMLElementWithGesture) {\n        elem[SYMBOL] = this;\n        this.id = ID++;\n        this.element = elem;\n        this.handlers = {};\n        new BasicHandler(\n            elem,\n            this.handleDown.bind(this),\n            this.handleUp.bind(this),\n            this.handleMove.bind(this)\n        );\n        this.pointers = new Array(3);\n        elem.addEventListener(\"contextmenu\", (evt) => { evt.preventDefault() }, false);\n    }\n\n    get identifier() { return this.id; }\n\n    on(handlers: THandlers) {\n        this.handlers = wrapSpecialHandlers(Object.assign(this.handlers, handlers));\n        Object.keys(this.handlers).forEach(eventName => {\n            if (STANDARD_EVENTS.indexOf(eventName) === -1) return;\n            // This is a non-pointer event. (i.e., keyboard, resize, ...)\n            const handler = this.handlers[eventName];\n            if (typeof handler === 'function' ) {\n                this.element.addEventListener(eventName, handler, false);\n            }\n        });\n    }\n\n    /**\n     * Returns true if current gesture has at least one of the provided handlers.\n     */\n    private hasHandlerFor(...names: string[]) {\n        for( const name of names ) {\n            if (this.handlers[name]) return true;\n        }\n        return false;\n    }\n\n    private getPointer(index: number) {\n        const pointers = this.pointers;\n        if (typeof pointers[index] === 'undefined') {\n            pointers[index] = {\n                isDown: false,\n                moves: new Moves(0, 0),\n                rect: { left: 0, top: 0, width: 0, height: 0 }\n            }\n        }\n        return pointers[index];\n    }\n\n    private handleDown(event: IBasicEvent) {\n        // We don't want to deal with more than 3 simultaneous touches.\n        if (event.index > 2) return;\n\n        const { x, y } = event;\n        const { element } = this;\n        const ptr = this.getPointer(event.index);\n        ptr.isDown = true;\n        ptr.moves.init(x, y);\n\n        if (this.handlers.down) {\n            this.handlers.down({\n                ...event,\n                x, y, target: element })\n        }\n    }\n\n    private handleUp(event: IBasicEvent) {\n        // We want not deal with more than 3 simultaneous touches.\n        if (event.index > 2) return;\n\n        const { x, y } = event;\n        const ptr = this.getPointer(event.index);\n        ptr.isDown = false;\n        ptr.moves.add(x, y);\n\n        if (this.handlers.up) {\n            this.handlers.up(Object.assign(event, { x, y, target: this.element }));\n        }\n        this.recognizeTap(event, ptr);\n        this.recognizeSwipe(event, ptr);\n    }\n\n    private handleMove(event: IBasicEvent) {\n        // We want not deal with more than 3 simultaneous touches.\n        if (event.index > 2) return;\n\n        const ptr = this.getPointer(event.index);\n        const { x, y } = event;\n        ptr.moves.add(x, y);\n        this.recognizePan(event, ptr);\n    }\n\n    private recognizeTap(evt: IBasicEvent, ptr: IPointer) {\n        // A tap is recognized only if there is less than 400ms\n        // between down and up, and if the pointer has not moves more\n        // than 16px.\n        if (!this.handlers.tap || ptr.moves.elapsedTime > 400) return;\n        const moves = ptr.moves;\n        const dx = Math.abs(moves.x - moves.startX);\n        if (dx > 16) return;\n        const dy = Math.abs(moves.y - moves.startY);\n        if (dy > 16) return;\n\n        evt.clear();\n        this.handlers.tap({ ...evt, x: moves.x, y: moves.y, target: this.element });\n    }\n\n    private recognizePan(evt: IBasicEvent, ptr: IPointer) {\n        if (!ptr.isDown) return;\n        this.recognizePanDown(evt, ptr);\n        this.recognizePanUp(evt, ptr);\n        if (this.handlers.pan) {\n            const { x, y, startX, startY } = ptr.moves;\n            this.handlers.pan(\n                { ...evt, x, y, startX, startY, target: this.element });\n        }\n    }\n\n    private recognizePanDown(evt: IBasicEvent, ptr: IPointer) {\n        if (!this.hasHandlerFor(\"pandown\", \"panvertical\")) return;\n\n        // Check that we are panning down.\n        const moves = ptr.moves;\n        const sx = Math.abs(moves.speedX);\n        const sy = moves.speedY;\n        if (sy < sx) return;\n        // Check that the final point is beneath the initial one.\n        const dx = Math.abs(moves.x - moves.startX);\n        const dy = moves.y - moves.startY;\n        if (dy < dx) return;\n\n        if (this.handlers.pandown) {\n            this.handlers.pandown(\n                { ...evt, x: moves.x, y: moves.y, target: this.element });\n        }\n        if (this.handlers.panvertical) {\n            this.handlers.panvertical(\n                { ...evt, x: moves.x, y: moves.y, target: this.element });\n        }\n    }\n\n    private recognizePanUp(evt: IBasicEvent, ptr: IPointer) {\n        if (!this.hasHandlerFor(\"panup\", \"panvertical\")) return;\n\n        // Check that we are panning up.\n        const moves = ptr.moves;\n        const sx = Math.abs(moves.speedX);\n        const sy = -moves.speedY;\n        if (sy < sx) return;\n        // Check that the final point is beneath the initial one.\n        const dx = Math.abs(moves.x - moves.startX);\n        const dy = moves.startY - moves.y;\n        if (dy < dx) return;\n\n        if (this.handlers.panup) {\n            this.handlers.panup(\n                { ...evt, x: moves.x, y: moves.y, target: this.element });\n        }\n        if (this.handlers.panvertical) {\n            this.handlers.panvertical(\n                { ...evt, x: moves.x, y: moves.y, target: this.element });\n        }\n    }\n\n    private recognizeSwipe(evt: IBasicEvent, ptr: IPointer) {\n        this.recognizeSwipeDown(evt, ptr);\n        this.recognizeSwipeUp(evt, ptr);\n        this.recognizeSwipeLeft(evt, ptr);\n        if (this.handlers.swipe) {\n            const { x, y, startX, startY } = ptr.moves;\n            this.handlers.swipe({ ...evt, x, y, startX, startY, target: this.element });\n        }\n    }\n\n    private recognizeSwipeDown(evt: IBasicEvent, ptr: IPointer) {\n        if (!this.hasHandlerFor(\"swipedown\", \"swipevertical\")) return;\n\n        // Check that we are panning down.\n        const moves = ptr.moves;\n        const sx = Math.abs(moves.speedX);\n        const sy = moves.speedY;\n        if (sy < sx) return;\n        // Check that the final point is beneath the initial one.\n        const dx = Math.abs(moves.x - moves.startX);\n        const dy = moves.y - moves.startY;\n        if (dy < dx) return;\n        // Minimal speed for swipe: 100 pixels/second.\n        const speed = dy / moves.elapsedTime;\n        if (speed < 0.1) return;\n        if (this.handlers.swipedown) {\n            this.handlers.swipedown(\n                { ...evt, x: moves.x, y: moves.y, target: this.element });\n        }\n        if (this.handlers.swipevertical) {\n            this.handlers.swipevertical(\n                { ...evt, x: moves.x, y: moves.y, target: this.element });\n        }\n    }\n\n    private recognizeSwipeUp(evt: IBasicEvent, ptr: IPointer) {\n        if (!this.hasHandlerFor(\"swipeup\", \"swipevertical\")) return;\n\n        // Check that we are panning up.\n        const moves = ptr.moves;\n        const sx = Math.abs(moves.speedX);\n        const sy = moves.speedY;\n        if (sy < sx) return;\n        // Check that the final point is beneath the initial one.\n        const dx = Math.abs(moves.x - moves.startX);\n        const dy = moves.y - moves.startY;\n        if (dy < dx) return;\n        // Minimal speed for swipe: 100 pixels/second.\n        const speed = dy / moves.elapsedTime;\n        if (speed < 0.1) return;\n        if (this.handlers.swipeup) {\n            this.handlers.swipeup({ ...evt, x: moves.x, y: moves.y, target: this.element });\n        }\n        if (this.handlers.swipevertical) {\n            this.handlers.swipevertical(\n                { ...evt, x: moves.x, y: moves.y, target: this.element });\n        }\n    }\n\n    private recognizeSwipeLeft(evt: IBasicEvent, ptr: IPointer) {\n        if (!this.hasHandlerFor(\"swipeleft\", \"swipehorizontal\")) return;\n\n        // Check that we are panning left.\n        const moves = ptr.moves;\n        const sx = -moves.speedX;\n        const sy = Math.abs(moves.speedY);\n        if (sx < sy) return;\n        // Check that the final point is beneath the initial one.\n        const dx = moves.startX - moves.x;\n        const dy = Math.abs(moves.y - moves.startY);\n        if (dx < dy) return;\n        // Minimal speed for swipe: 100 pixels/second.\n        const speed = dx / moves.elapsedTime;\n        if (speed < 0.1) return;\n        if (this.handlers.swipeleft) {\n            this.handlers.swipeleft(\n                { ...evt, x: moves.x, y: moves.y, target: this.element });\n        }\n        if (this.handlers.swipehorizontal) {\n            this.handlers.swipehorizontal(\n                { ...evt, x: moves.x, y: moves.y, target: this.element });\n        }\n    }\n}\n\nexport default function(elem: IHTMLElementWithGesture): Gesture {\n    let gesture = elem[SYMBOL];\n    if( gesture ) return gesture;\n    gesture = new Gesture(elem);\n    elem[SYMBOL] = gesture;\n    return gesture;\n}\n\n\n/**\n * Somw event (like \"wheel\") need their handler to be wrapped in order to\n * map the event is something else.\n */\nfunction wrapSpecialHandlers(rawHandlers: THandlers): THandlers {\n    const handlers: THandlers = {};\n    for( const eventName of Object.keys(rawHandlers) ) {\n        if (eventName === 'wheel') {\n            handlers.wheel = (evt: WheelEvent) => {\n                rawHandlers.wheel({\n                    deltaX: evt.deltaX,\n                    deltaY: evt.deltaY,\n                    deltaZ: evt.deltaZ,\n                    x: 0,\n                    y: 0\n                });\n            }\n            continue;\n        }\n        handlers[eventName] = rawHandlers[eventName];\n    }\n    return handlers;\n}\n","import Data from './data.yaml'\n\ninterface IPoint3D {\n    y: number, x1: number, x2: number\n}\n\nclass Plane {\n    //  Y = c + a1.X1 + a2.X2\n    private readonly a1: number\n    private readonly a2: number\n    private readonly c: number\n\n    constructor(coeffs: [number, number, number]) {\n        this.c = coeffs[0]\n        this.a1 = coeffs[1]\n        this.a2 = coeffs[2]\n    }\n}\n\nexport default class DataManager {\n    private readonly points: IPoint3D[]\n    private readonly planes: Plane[]\n    private x1Min: number = 0\n    private x1Max: number = 0\n    private x2Min: number = 0\n    private x2Max: number = 0\n    private yMin: number = 0\n    private yMax: number = 0\n\n    constructor() {\n        console.info(\"Data=\", Data);\n        const that = this\n        if (Data.points.length > 0) {\n            const point = Data.points[0]\n            const y = point[0]\n            const x1 = point[1]\n            const x2 = point[2]\n            this.x1Min = x1\n            this.x1Max = x1\n            this.x2Min = x2\n            this.x2Max = x2\n            this.yMin = y\n            this.yMax = y\n        }\n        this.points = Data.points.map((p: [number, number, number]) => {\n            const y = p[0]\n            const x1 = p[1]\n            const x2 = p[2]\n            that.yMin = Math.min(that.yMin, y)\n            that.yMax = Math.max(that.yMax, y)\n            that.x1Min = Math.min(that.x1Min, x1)\n            that.x1Max = Math.max(that.x1Max, x1)\n            that.x2Min = Math.min(that.x2Min, x2)\n            that.x2Max = Math.max(that.x2Max, x2)\n            return { x1, x2, y }\n        })\n        this.planes = Data.planes.map((p: [number, number, number]) => ({\n            c: p[0],\n            a1: p[1],\n            a2: p[2]\n        }))\n    }\n\n    getCenter(): IPoint3D {\n        return {\n            y: 0.5 * (this.yMin + this.yMax),\n            x1: 0.5 * (this.x1Min + this.x1Max),\n            x2: 0.5 * (this.x2Min + this.x2Max)\n        }\n    }\n\n    getRadius(): number {\n        return Math.max(\n            this.yMax - this.yMin,\n            Math.max(\n                this.x1Max - this.x1Min,\n                this.x2Max - this.x2Min\n            )\n        ) * 0.5\n    }\n\n    get pointsCount() { return this.points.length }\n\n    get planesCount() { return this.planes.length }\n\n    getPoint(index: number): IPoint3D {\n        return this.points[index]\n    }\n\n    getPlane(index: number): Plane {\n        return this.planes[index]\n    }\n}\n","const BPE = (new Float32Array()).BYTES_PER_ELEMENT;\r\n\r\nexport interface IShaders { vert: string, frag: string }\r\n\r\ninterface IAttrib extends WebGLActiveInfo {\r\n    typeName: string,\r\n    length: number,\r\n    location: number\r\n}\r\ninterface IAttribsDic {\r\n    [key: string]: IAttrib\r\n}\r\ninterface IUniformsDic {\r\n    [key: string]: WebGLUniformLocation\r\n}\r\n\r\n/**\r\n * Creating  a  WebGL  program  for shaders  is  painful.  This  class\r\n * simplifies the process.\r\n *\r\n * @class Program\r\n *\r\n * Object properties starting with `$` are WebGL uniforms or attributes.\r\n * Uniforms behave as expected: you can read/write a value.\r\n * Attributes when read, return the location. And when written, enable/disabled\r\n * this attribute. So you read integers and writte booleans.\r\n *\r\n * @param gl - WebGL context.\r\n * @param codes  - Object  with two  mandatory attributes:  `vert` for\r\n * vertex shader and `frag` for fragment shader.\r\n * @param  includes  -  (optional)  If  defined,  the  `#include  foo`\r\n * directives  of  shaders   will  be  replaced  by   the  content  of\r\n * `includes.foo`.\r\n */\r\nexport default class Program {\r\n    readonly gl: WebGLRenderingContext\r\n    readonly BPE: number\r\n    readonly program: WebGLProgram\r\n    private _typesNamesLookup: {[key: number]: string}\r\n    readonly attribs: IAttribsDic\r\n    readonly uniforms: IUniformsDic\r\n\r\n    constructor(gl: WebGLRenderingContext,\r\n        codes: IShaders,\r\n        includes: { [key: string]: string } = {}) {\r\n        if (typeof codes.vert !== 'string') {\r\n            throw Error('[webgl.program] Missing attribute `vert` in argument `codes`!');\r\n        }\r\n        if (typeof codes.frag !== 'string') {\r\n            throw Error('[webgl.program] Missing attribute `frag` in argument `codes`!');\r\n        }\r\n\r\n        codes = parseIncludes(codes, includes);\r\n\r\n        this.gl = gl;\r\n        Object.freeze(this.gl);\r\n        this.BPE = BPE;\r\n        Object.freeze(this.BPE);\r\n\r\n        this._typesNamesLookup = getTypesNamesLookup(gl);\r\n\r\n        const shaderProgram = gl.createProgram();\r\n        if (!shaderProgram) {\r\n            throw Error('Unable to create WebGLProgram!')\r\n        }\r\n        this.program = shaderProgram;\r\n        const vertShader = getVertexShader(gl, codes.vert)\r\n        gl.attachShader(shaderProgram, vertShader)\r\n        const fragShader = getFragmentShader(gl, codes.frag)\r\n        gl.attachShader(shaderProgram, fragShader)\r\n        gl.linkProgram(shaderProgram)\r\n\r\n\r\n        this.use = function() {\r\n            gl.useProgram(shaderProgram);\r\n        };\r\n\r\n        this.attribs = this.createAttributes();\r\n        this.uniforms = this.createUniforms();\r\n    }\r\n\r\n    private createAttributes(): IAttribsDic {\r\n        const { gl, program } = this\r\n        const attribs: IAttribsDic = {};\r\n        const attribsCount = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\r\n        for (let index = 0; index < attribsCount; index++) {\r\n            const item: IAttrib | null = gl.getActiveAttrib(program, index) as IAttrib;\r\n            if (!item) continue\r\n            item.typeName = this.getTypeName(item.type);\r\n            item.length = this.getSize(gl, item);\r\n            item.location = gl.getAttribLocation(program, item.name);\r\n            attribs[item.name] = item;\r\n            Object.defineProperty(this, '$' + item.name, {\r\n                value: item.location,\r\n                writable: false,\r\n                enumerable: true,\r\n                configurable: false\r\n            });\r\n        }\r\n        return attribs\r\n    }\r\n\r\n    private getSize(gl: WebGLRenderingContext, item: IAttrib): number {\r\n        switch (item.type) {\r\n            case gl.FLOAT_VEC4:\r\n                return 4;\r\n            case gl.FLOAT_VEC3:\r\n                return 3;\r\n            case gl.FLOAT_VEC2:\r\n                return 2;\r\n            case gl.FLOAT:\r\n                return 1;\r\n            default:\r\n                throw Error(\"[webgl.program:getSize] I don't know the size of the attribute '\" + item.name +\r\n                    \"' because I don't know the type \" + this.getTypeName(item.type) + \"!\");\r\n        }\r\n    }\r\n\r\n    use() {\r\n        this.gl.useProgram(this.program)\r\n    }\r\n\r\n    getTypeName(typeId: number) {\r\n        return this._typesNamesLookup[typeId];\r\n    }\r\n\r\n    bindAttribs(buffer: WebGLBuffer, ...names: string[]) {\r\n        const that = this\r\n        const { gl } = this\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\r\n\r\n        let totalSize = 0\r\n        for (const name of names) {\r\n            const attrib = that.attribs[name]\r\n            if (!attrib) {\r\n                throw Error(\"Cannot find attribute \\\"\" + name + \"\\\"!\\n\" +\r\n                    \"It may be not active because unused in the shader.\\n\" +\r\n                    \"Available attributes are: \" + Object.keys(that.attribs).map(function(name) {\r\n                        return '\"' + name + '\"';\r\n                    }).join(\", \") + ` (${that.attribs.length})`)\r\n            }\r\n            totalSize += (attrib.size * attrib.length) * BPE\r\n        }\r\n\r\n        let offset = 0;\r\n        for (const name of names) {\r\n            const attrib = that.attribs[name];\r\n            gl.enableVertexAttribArray(attrib.location)\r\n            gl.vertexAttribPointer(\r\n                attrib.location,\r\n                attrib.size * attrib.length,\r\n                gl.FLOAT,\r\n                false, // No normalisation.\r\n                totalSize,\r\n                offset\r\n            )\r\n            offset += (attrib.size * attrib.length) * BPE\r\n        }\r\n    }\r\n\r\n    private createUniforms(): IUniformsDic {\r\n        const { gl, program } = this\r\n        const uniforms: IUniformsDic = {};\r\n        const uniformsCount = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\r\n        for (let index = 0; index < uniformsCount; index++) {\r\n            const item = gl.getActiveUniform(program, index);\r\n            if (!item) continue\r\n            const location = gl.getUniformLocation(program, item.name)\r\n            if (!location) continue\r\n            uniforms[item.name] = location\r\n            Object.defineProperty(this, '$' + item.name, {\r\n                set: this.createUniformSetter(item, uniforms[item.name], this._typesNamesLookup),\r\n                get: this.createUniformGetter(item),\r\n                enumerable: true,\r\n                configurable: false\r\n            });\r\n        }\r\n\r\n        return uniforms\r\n    }\r\n\r\n    private createUniformSetter(item: WebGLActiveInfo,\r\n                                nameGL: WebGLUniformLocation,\r\n                                lookup: {[key: number]: string}) {\r\n        const { gl } = this\r\n        const nameJS = '_$' + item.name;\r\n\r\n        switch (item.type) {\r\n            case gl.BYTE:\r\n            case gl.UNSIGNED_BYTE:\r\n            case gl.SHORT:\r\n            case gl.UNSIGNED_SHORT:\r\n            case gl.INT:\r\n            case gl.UNSIGNED_INT:\r\n            case gl.SAMPLER_2D: // For textures, we specify the texture unit.\r\n                if (item.size === 1) {\r\n                    return function(this: {[key: string]: number}, v: number) {\r\n                        gl.uniform1i(nameGL, v);\r\n                        this[nameJS] = v;\r\n                    };\r\n                } else {\r\n                    return function(this: {[key: string]: Int32List}, v: Int32List) {\r\n                        gl.uniform1iv(nameGL, v);\r\n                        this[nameJS] = v;\r\n                    };\r\n                }\r\n            case gl.FLOAT:\r\n                if (item.size === 1) {\r\n                    return function(this: {[key: string]: number}, v: number) {\r\n                        gl.uniform1f(nameGL, v);\r\n                        this[nameJS] = v;\r\n                    };\r\n                } else {\r\n                    return function(this: {[key: string]: Float32List}, v: Float32List) {\r\n                        gl.uniform1fv(nameGL, v);\r\n                        this[nameJS] = v;\r\n                    };\r\n                }\r\n            case gl.FLOAT_VEC2:\r\n                if (item.size === 1) {\r\n                    return function(this: {[key: string]: Float32List}, v: Float32List) {\r\n                        gl.uniform2fv(nameGL, v);\r\n                        this[nameJS] = v;\r\n                    };\r\n                } else {\r\n                    throw Error(\r\n                        \"[webgl.program.createWriter] Don't know how to deal arrays of FLOAT_VEC2 in uniform `\" +\r\n                        item.name + \"'!'\"\r\n                    );\r\n                }\r\n            case gl.FLOAT_VEC3:\r\n                if (item.size === 1) {\r\n                    return function(this: {[key: string]: Float32List}, v: Float32List) {\r\n                        gl.uniform3fv(nameGL, v);\r\n                        this[nameJS] = v;\r\n                    };\r\n                } else {\r\n                    throw Error(\r\n                        \"[webgl.program.createWriter] Don't know how to deal arrays of FLOAT_VEC3 in uniform `\" +\r\n                        item.name + \"'!'\"\r\n                    );\r\n                }\r\n            case gl.FLOAT_VEC4:\r\n                if (item.size === 1) {\r\n                    return function(this: {[key: string]: Float32List}, v: Float32List) {\r\n                        gl.uniform4fv(nameGL, v);\r\n                        this[nameJS] = v;\r\n                    };\r\n                } else {\r\n                    throw Error(\r\n                        \"[webgl.program.createWriter] Don't know how to deal arrays of FLOAT_VEC4 in uniform `\" +\r\n                        item.name + \"'!'\"\r\n                    );\r\n                }\r\n            case gl.FLOAT_MAT3:\r\n                if (item.size === 1) {\r\n                    return function(this: {[key: string]: Float32List}, v: Float32List) {\r\n                        gl.uniformMatrix3fv(nameGL, false, v);\r\n                        this[nameJS] = v;\r\n                    };\r\n                } else {\r\n                    throw Error(\r\n                        \"[webgl.program.createWriter] Don't know how to deal arrays of FLOAT_MAT3 in uniform `\" +\r\n                        item.name + \"'!'\"\r\n                    );\r\n                }\r\n            case gl.FLOAT_MAT4:\r\n                if (item.size === 1) {\r\n                    return function(this: {[key: string]: Float32List}, v: Float32List) {\r\n                        gl.uniformMatrix4fv(nameGL, false, v);\r\n                        this[nameJS] = v;\r\n                    };\r\n                } else {\r\n                    throw Error(\r\n                        \"[webgl.program.createWriter] Don't know how to deal arrays of FLOAT_MAT4 in uniform `\" +\r\n                        item.name + \"'!'\"\r\n                    );\r\n                }\r\n            default:\r\n                throw Error(\r\n                    \"[webgl.program.createWriter] Don't know how to deal with uniform `\" +\r\n                    item.name + \"` of type \" + lookup[item.type] + \"!\"\r\n                );\r\n        }\r\n    }\r\n\r\n    private createUniformGetter(item: WebGLActiveInfo) {\r\n        var name = '_$' + item.name;\r\n        return function(this: {[key: string]: any}) {\r\n            return this[name];\r\n        };\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * This is a preprocessor for shaders.\r\n * Directives  `#include`  will be  replaced  by  the content  of  the\r\n * correspondent attribute in `includes`.\r\n */\r\nfunction parseIncludes(codes: IShaders, includes: { [key: string]: string }): IShaders {\r\n    return {\r\n        vert: parseInclude(codes.vert, includes),\r\n        frag: parseInclude(codes.frag, includes)\r\n    }\r\n}\r\n\r\nfunction parseInclude(code: string, includes: { [key: string]: string }): string {\r\n    return code.split('\\n').map(function(line) {\r\n        if (line.trim().substr(0, 8) !== '#include') return line;\r\n        const pos = line.indexOf('#include') + 8;\r\n        let includeName = line.substr(pos).trim();\r\n        // We accept all this systaxes:\r\n        // #include foo\r\n        // #include 'foo'\r\n        // #include <foo>\r\n        // #include \"foo\"\r\n        if (\"'<\\\"\".indexOf(includeName.charAt(0)) > -1) {\r\n            includeName = includeName.substr(1, includeName.length - 2);\r\n        }\r\n        const snippet = includes[includeName];\r\n        if (typeof snippet !== 'string') {\r\n            console.error(\"Include <\" + includeName + \"> not found in \", includes);\r\n            throw Error(\"Include not found in shader: \" + includeName);\r\n        }\r\n        return snippet;\r\n    }).join(\"\\n\");\r\n}\r\n\r\n\r\n\r\n\r\nfunction getShader(type: number, gl: WebGLRenderingContext, code: string): WebGLShader {\r\n    if (type !== gl.VERTEX_SHADER && type !== gl.FRAGMENT_SHADER) {\r\n        throw Error('Type must be VERTEX_SHADER or FRAGMENT_SHADER!')\r\n    }\r\n    const shader = gl.createShader(type);\r\n    if (!shader) {\r\n        throw Error(`Unable to create a ${type === gl.VERTEX_SHADER ? \"VERTEX\" : \"FRAGMENT\"} shader!`)\r\n    }\r\n    gl.shaderSource(shader, code);\r\n    gl.compileShader(shader);\r\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n        console.log(code);\r\n        console.error(\"An error occurred compiling the shader: \" + gl.getShaderInfoLog(shader));\r\n        throw Error(`Unable to create a ${type === gl.VERTEX_SHADER ? \"VERTEX\" : \"FRAGMENT\"} shader!`)\r\n    }\r\n\r\n    return shader;\r\n}\r\n\r\nfunction getFragmentShader(gl: WebGLRenderingContext, code: string) {\r\n    return getShader(gl.FRAGMENT_SHADER, gl, code);\r\n}\r\n\r\nfunction getVertexShader(gl: WebGLRenderingContext, code: string) {\r\n    return getShader(gl.VERTEX_SHADER, gl, code);\r\n}\r\n\r\nfunction getTypesNamesLookup(gl: WebGLRenderingContext): {} {\r\n    var lookup: {[key: number]: string} = {}\r\n\r\n    for (let k in gl) {\r\n        if (k !== k.toUpperCase()) continue\r\n        const v = (gl as {[key: string]: any})[k]\r\n        if (typeof v === 'number') {\r\n            lookup[v] = k\r\n        }\r\n    }\r\n    return lookup\r\n}\r\n","export default {\n    padNumber(value: number, size: number = 6, fillWith: string = '0'): string {\n        let text = `${value}`;\n        while (text.length < size) {\n            text = fillWith.charAt(0) + text;\n        }\n        return text;\n    },\n\n    clamp(value: number, min: number = 0, max: number = 1) {\n        if (value < min) return min;\n        if (value > max) return max;\n        return value;\n    },\n\n    loadTextFromURL(url: string): Promise<string> {\n        return new Promise((resolve, reject) => {\n            fetch(url)\n                .then((response: Response) => {\n                    if (!response.ok) {\n                        reject(`Error ${response.status}: ${response.statusText}!`);\n                    }\n                    return response.text();\n                })\n                .then(resolve)\n                .catch(reject);\n        });\n    },\n\n    loadJsonFromURL(url: string): Promise<any> {\n        return new Promise((resolve, reject) => {\n            fetch(url)\n                .then((response: Response) => {\n                    return response.json();\n                })\n                .then(resolve)\n                .catch(reject);\n        });\n    }\n}\n","import VertPoint from './shader/point.vert'\nimport FragPoint from './shader/point.frag'\n\nimport Program, { IShaders } from '../../../tfw/webgl/program'\nimport Util from '../../../tfw/util'\nimport Data from '../../data'\n\nexport interface IPointPainter {\n    paint: (transfo: Float32Array) => void\n}\n\nclass PointPainter {\n    private readonly prg: Program\n    private readonly buff: WebGLBuffer\n    private readonly pointsCount: number\n\n    constructor(private gl: WebGLRenderingContext,\n                shaders: IShaders,\n                data: Data) {\n        this.prg = new Program(gl, shaders)\n        this.buff = this.initBuffer(data)\n        this.pointsCount = data.pointsCount\n    }\n\n    paint(transfo: Float32Array) {\n        const { gl, prg, buff, pointsCount } = this\n\n        gl.enable( gl.DEPTH_TEST );\n        gl.depthFunc( gl.LESS );\n\n        const minSize = Math.min(gl.canvas.clientWidth, gl.canvas.clientHeight)\n\n        prg.use()\n        prg.$uniTransfo = transfo\n        prg.$uniPointSize = minSize * 0.06\n        prg.$uniColor = new Float32Array([0.2, 0.7, 1.0])\n\n        prg.bindAttribs(buff, \"attPoint\")\n\n        gl.bindBuffer( gl.ARRAY_BUFFER, buff )\n        gl.drawArrays( gl.POINTS, 0, pointsCount )\n\n    }\n\n    private initBuffer(data: Data): WebGLBuffer {\n        const { gl } = this\n        if (!gl) throw Error(\"No WebGL context!\")\n        const buffer = gl.createBuffer()\n        if (!buffer) {\n            throw Error(\"Unable to create a WebGL buffer!\")\n        }\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer );\n        gl.bufferData(gl.ARRAY_BUFFER, this.createPointVertices(data), gl.STATIC_DRAW );\n        return buffer\n    }\n\n    /**\n     * Create a buffer to hold the points in the scene.\n     * Each point is represented by 3 float attributes:\n     * x1, x2 and y.\n     */\n    private createPointVertices(data: Data): Float32Array {\n        const vertices = new Float32Array(data.pointsCount * 3)\n        let idxDst = 0\n        for (let idxSrc = 0 ; idxSrc < data.pointsCount ; idxSrc++) {\n            const point = data.getPoint(idxSrc)\n            vertices[idxDst++] = point.x1\n            vertices[idxDst++] = point.x2\n            vertices[idxDst++] = point.y\n        }\n        return vertices\n    }\n\n\n}\n\n\nexport default {\n    async create(gl: WebGLRenderingContext, data: Data): Promise<IPointPainter> {\n        const shaders: IShaders = {\n            vert: await Util.loadTextFromURL(VertPoint),\n            frag: await Util.loadTextFromURL(FragPoint)\n        }\n\n        return new PointPainter(gl, shaders, data)\n    }\n}\n","export default { createCanvas, createFromCanvas }\n\n\nfunction createFromCanvas(gl: WebGLRenderingContext, canvas: HTMLCanvasElement): WebGLTexture {\n    const texture = gl.createTexture();\n    if (!texture) {\n        throw Error(\"Unable to create a new texture! Maybe the memory is full.\")\n    }\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, canvas);\n\n    return texture;\n}\n\n\nfunction createCanvas(width: number, height: number): HTMLCanvasElement {\n    const canvas = document.createElement(\"canvas\")\n    canvas.setAttribute(\"width\", `${width}`)\n    canvas.setAttribute(\"height\", `${height}`)\n    return canvas\n}\n","import Vert from './shader/axis.vert'\nimport Frag from './shader/axis.frag'\n\nimport Program, { IShaders } from '../../../tfw/webgl/program'\nimport Texture from '../../../tfw/webgl/texture'\nimport Util from '../../../tfw/util'\nimport Data from '../../data'\nimport { IAxisPainter } from './types'\n\ninterface ITextures {\n    x1: WebGLTexture,\n    x2: WebGLTexture,\n    y: WebGLTexture\n}\n\nconst BACKGROUND = \"#cde\"\n\nclass AxisPainter {\n    private readonly prg: Program\n    private readonly buff: WebGLBuffer\n    private readonly textures: ITextures\n\n    constructor(private gl: WebGLRenderingContext,\n        shaders: IShaders,\n        data: Data) {\n        this.prg = new Program(gl, shaders)\n        this.buff = this.initBuffer(data)\n        this.textures = this.createTextures()\n    }\n\n    paint(transfo: Float32Array, camera: Float32Array) {\n        const { gl, prg, buff, textures } = this\n\n        gl.enable(gl.DEPTH_TEST)\n        gl.depthFunc(gl.LESS)\n        gl.cullFace(gl.BACK)\n        gl.disable(gl.CULL_FACE)\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n        prg.use()\n        prg.$uniTransfo = transfo\n        prg.$uniCamera = camera\n\n        prg.bindAttribs(buff, \"attPoint\", \"attNormal\", \"attUV\")\n\n        prg.$uniTexture = 0\n        gl.activeTexture(gl.TEXTURE0);\n\n        gl.bindTexture(gl.TEXTURE_2D, textures.x1);\n        gl.bindBuffer(gl.ARRAY_BUFFER, buff)\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4)\n\n        gl.bindTexture(gl.TEXTURE_2D, textures.y);\n        gl.bindBuffer(gl.ARRAY_BUFFER, buff)\n        gl.drawArrays(gl.TRIANGLE_STRIP, 4, 4)\n\n        gl.bindTexture(gl.TEXTURE_2D, textures.x2);\n        gl.bindBuffer(gl.ARRAY_BUFFER, buff)\n        gl.drawArrays(gl.TRIANGLE_STRIP, 8, 4)\n    }\n\n    private createTextures(): ITextures {\n        const { gl } = this\n\n        const canvas1 = Texture.createCanvas(1024, 1024)\n        const ctx1 = canvas1.getContext(\"2d\")\n        if (!ctx1) {\n            throw Error(\"Unable to create a 2D context on a canvas!\")\n        }\n        ctx1.fillStyle = BACKGROUND\n        ctx1.fillRect(0, 0, 1024, 1024)\n        ctx1.strokeStyle = \"#224\"\n        ctx1.lineWidth = 10\n        ctx1.beginPath()\n        ctx1.moveTo(0, 1023);\n        ctx1.lineTo(1000, 1023);\n        ctx1.lineTo(970, 993);\n        ctx1.moveTo(0, 1023);\n        ctx1.lineTo(0, 23);\n        ctx1.lineTo(30, 53);\n        ctx1.stroke()\n        ctx1.font = \"80px sans-serif\"\n        ctx1.fillStyle = \"#224\"\n        ctx1.fillText(\"Y\", 40, 120);\n        const tex1 = Texture.createFromCanvas(gl, canvas1)\n\n        const canvas2 = Texture.createCanvas(1024, 1024)\n        const ctx2 = canvas2.getContext(\"2d\")\n        if (!ctx2) {\n            throw Error(\"Unable to create a 2D context on a canvas!\")\n        }\n        ctx2.fillStyle = BACKGROUND\n        ctx2.fillRect(0, 0, 1024, 1024)\n        ctx2.strokeStyle = \"#226\"\n        ctx2.lineWidth = 10\n        ctx2.beginPath()\n        ctx2.moveTo(0, 1023);\n        ctx2.lineTo(1000, 1023);\n        ctx2.lineTo(970, 993);\n        ctx2.moveTo(0, 1023);\n        ctx2.lineTo(0, 23);\n        ctx2.lineTo(30, 53);\n        ctx2.stroke()\n        ctx2.font = \"80px sans-serif\"\n        ctx2.fillStyle = \"#226\"\n        ctx2.fillText(\"X1\", 40, 120);\n        const tex2 = Texture.createFromCanvas(gl, canvas2)\n\n        const canvas3 = Texture.createCanvas(1024, 1024)\n        const ctx3 = canvas3.getContext(\"2d\")\n        if (!ctx3) {\n            throw Error(\"Unable to create a 2D context on a canvas!\")\n        }\n        ctx3.fillStyle = BACKGROUND\n        ctx3.fillRect(0, 0, 1024, 1024)\n        ctx3.strokeStyle = \"#224\"\n        ctx3.lineWidth = 10\n        ctx3.beginPath()\n        ctx3.moveTo(0, 1023);\n        ctx3.lineTo(1000, 1023);\n        ctx3.lineTo(970, 993);\n        ctx3.moveTo(0, 1023);\n        ctx3.lineTo(0, 23);\n        ctx3.lineTo(30, 53);\n        ctx3.stroke()\n        ctx3.font = \"80px sans-serif\"\n        ctx3.fillStyle = \"#226\"\n        ctx3.fillText(\"X2\", 40, 120);\n        const tex3 = Texture.createFromCanvas(gl, canvas3)\n\n        return {\n            x1: tex1,\n            x2: tex2,\n            y: tex3\n        }\n    }\n\n    private initBuffer(data: Data): WebGLBuffer {\n        const { gl } = this\n        if (!gl) throw Error(\"No WebGL context!\")\n        const buffer = gl.createBuffer()\n        if (!buffer) {\n            throw Error(\"Unable to create a WebGL buffer!\")\n        }\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, this.createAxisVertices(data), gl.STATIC_DRAW);\n        return buffer\n    }\n\n    /**\n     * Create a buffer to hold the points in the scene.\n     * Each point is represented by 3 float attributes:\n     * x1, x2 and y.\n     */\n    private createAxisVertices(data: Data): Float32Array {\n        const center = data.getCenter()\n        const radius = data.getRadius() * 1.02\n        const x1 = center.x1 - radius\n        const X1 = center.x1 + radius\n        const x2 = center.x2 - radius\n        const X2 = center.x2 + radius\n        const y = center.y - radius\n        const Y = center.y + radius\n\n        const vertices = new Float32Array([\n            x1, X2, y, 1, 0, 0, 1, 1,\n            x1, X2, Y, 1, 0, 0, 1, 0,\n            x1, x2, y, 1, 0, 0, 0, 1,\n            x1, x2, Y, 1, 0, 0, 0, 0,\n\n            X1, x2, y, 0, 0, 1, 1, 1,\n            X1, X2, y, 0, 0, 1, 1, 0,\n            x1, x2, y, 0, 0, 1, 0, 1,\n            x1, X2, y, 0, 0, 1, 0, 0,\n\n            x1, x2, Y, 0, 1, 0, 1, 1,\n            X1, x2, Y, 0, 1, 0, 1, 0,\n            x1, x2, y, 0, 1, 0, 0, 1,\n            X1, x2, y, 0, 1, 0, 0, 0\n        ])\n        return vertices\n    }\n\n\n}\n\n\nexport default {\n    async create(gl: WebGLRenderingContext, data: Data): Promise<IAxisPainter> {\n        const shaders: IShaders = {\n            vert: await Util.loadTextFromURL(Vert),\n            frag: await Util.loadTextFromURL(Frag)\n        }\n\n        return new AxisPainter(gl, shaders, data)\n    }\n}\n","import React from \"react\"\nimport Resize from '../tfw/webgl/resize'\nimport { M4 } from '../tfw/webgl/math'\nimport Gesture from '../tfw/gesture'\nimport Data from './data'\nimport { IEvent, IWheelEvent } from '../tfw/gesture/types'\nimport PointPainter from './painter/point'\nimport { IPointPainter } from './painter/point/types'\nimport AxisPainter from './painter/axis'\nimport { IAxisPainter } from './painter/axis/types'\n\nimport \"./app.css\"\n\nexport default class App extends React.Component<{}, {}> {\n    private readonly refCanvas: React.RefObject<HTMLCanvasElement> = React.createRef()\n    private gl: WebGLRenderingContext|null = null\n    private readonly camera: Float32Array\n    private readonly perspective: Float32Array\n    private readonly transfo: Float32Array\n    private latitude: number = 0\n    private longitude: number = 0\n    private distance: number = 0\n    private saveLat: number = 0\n    private saveLng: number = 0\n    private saveDis: number = 0\n    private readonly data: Data\n    private pointPainter: IPointPainter|null = null\n    private axisPainter: IAxisPainter|null = null\n\n    constructor(props: {}) {\n        super(props)\n        this.data = new Data()\n        this.perspective = new Float32Array(16)\n        this.transfo = new Float32Array(16)\n        this.camera = new Float32Array(16)\n        this.distance = this.data.getRadius() * 3\n    }\n\n    async componentDidMount() {\n        try {\n            const canvas = this.refCanvas.current\n            if (!canvas) throw Error(\"No canvas!\")\n            this.attachGestures(canvas)\n            const gl = canvas.getContext(\"webgl\", {})\n            if (!gl) throw Error(\"No WebGL context!\")\n            this.gl = gl\n\n            this.pointPainter = await PointPainter.create(gl, this.data)\n            this.axisPainter = await AxisPainter.create(gl, this.data)\n\n            requestAnimationFrame(this.paint)\n        }\n        catch (ex) {\n            console.error(\"Unable to init WebGL!\\n\", ex)\n        }\n    }\n\n    private attachGestures(canvas: HTMLCanvasElement) {\n        Gesture(canvas).on({\n            down: this.handleDown,\n            pan: this.handlePan,\n            wheel: this.handleWheel\n        })\n    }\n\n    private handleWheel = (evt: IWheelEvent) => {\n        const radius = this.data.getRadius()\n        const dir = 0.06 * (evt.deltaY > 0 ? +1 : -1)\n        this.distance = clamp(this.distance + dir * radius, radius / 2, radius * 4)\n    }\n\n    private handleDown = () => {\n        this.saveLat = this.latitude\n        this.saveLng = this.longitude\n        this.saveDis = this.distance\n    }\n\n    private handlePan = (evt: IEvent) => {\n        const canvas = evt.target as HTMLCanvasElement\n        if (!canvas) return\n        const x = (evt.x - evt.startX) / canvas.clientWidth\n        const y = (evt.y - evt.startY) / canvas.clientHeight\n\n        if (evt.buttons === 1) {\n            this.longitude = this.saveLng - Math.PI * x\n            this.latitude = clamp(this.saveLat + Math.PI * y, -1.5, 1.5)\n        }\n        else {\n            const radius = this.data.getRadius()\n            this.distance = clamp(this.saveDis + 4 * radius * y, radius / 2, radius * 4)\n        }\n    }\n\n    private paint = (time: number) => {\n        requestAnimationFrame(this.paint)\n\n        const { gl, data } = this\n        if (!gl) return\n        const { pointPainter, axisPainter } = this\n        if (!pointPainter || !axisPainter) return\n\n        Resize(gl)\n        gl.clearColor( 0.8, 0.9, 1, 1 );\n        gl.clearDepth( 1 );\n        gl.clear( gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT );\n\n        const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight\n        const radius = data.getRadius()\n\n        M4.perspective(\n            Math.PI / 2, aspect,\n            radius * 0.001, radius * 10 + this.distance,\n            this.perspective)\n        const center = data.getCenter()\n        M4.cameraPolar(\n            center.x1, center.x2, center.y,\n            this.distance,\n            this.latitude,\n            this.longitude + Math.PI / 2,\n            this.camera\n        )\n        M4.mul(this.perspective, this.camera, this.transfo)\n\n        // Painting Dots.\n        pointPainter.paint(this.transfo)\n\n        // Painting Axis.\n        axisPainter.paint(this.transfo, this.camera)\n\n        // Painting Planes.\n\n\n    }\n\n    render() {\n        return (<div className=\"regressionViewer-App thm-bg0\">\n            <canvas ref={this.refCanvas}></canvas>\n        </div>)\n    }\n}\n\n\nfunction clamp(value: number, min: number, max: number): number {\n    if (value < min) return min\n    if (value > max) return max\n    return value\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n//import Theme from \"./tfw/theme\"\nimport App from './regression-viewer/app'\n\n/*\nTheme.register(\"soin\", {\n    white: \"#fda\", black: \"#420\",\n    bg0: \"#ffcb97\", bg1: \"#ffdab3\", bg2: \"#ffe6cc\", bg3: \"#fff3e6\",\n    bgP: \"#742\", bgPL: \"#953\", bgPD: \"#531\",\n    bgS: \"#ff9f30\", bgSD: \"#ff7f00\", bgSL: \"#ffbf60\"\n});\nTheme.apply(\"soin\");\n*/\n\nasync function start() {\n    try {\n        ReactDOM.render(\n            <App />,\n            document.getElementById('root'));\n    }\n    catch( ex ) {\n        console.error(ex)\n    }\n}\n\nstart()\n"],"sourceRoot":""}